# JMH version: 1.21
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9-Ubuntu-0ubuntu2.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.openkappa.runtime.fission.XorCount.fissured
# Parameters: (size = 256)

# Run progress: 0.00% complete, ETA 00:01:40
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 169.304 ns/op
# Warmup Iteration   2: 189.895 ns/op
# Warmup Iteration   3: 147.169 ns/op
# Warmup Iteration   4: 146.536 ns/op
# Warmup Iteration   5: 146.472 ns/op
Iteration   1: 150.808 ns/op
Iteration   2: 150.770 ns/op
Iteration   3: 146.466 ns/op
Iteration   4: 146.472 ns/op
Iteration   5: 146.881 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.runtime.fission.XorCount.fissured":
  148.279 ±(99.9%) 8.847 ns/op [Average]
  (min, avg, max) = (146.466, 148.279, 150.808), stdev = 2.297
  CI (99.9%): [139.433, 157.126] (assumes normal distribution)

Secondary result "com.openkappa.runtime.fission.XorCount.fissured:·asm":
PrintAssembly processed: 74558 total address lines.
Perf output processed (skipped 8.949 seconds):
 Column 1: cycles (4786 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 449 (733 bytes) 

                                                                            ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@30 (line 234)
                                                                            ; implicit exception: dispatches to 0x00007f1bc835bbe0
                              0x00007f1bc835b711: test   %r10d,%r10d
         ╭                    0x00007f1bc835b714: jne    0x00007f1bc835ba1a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@33 (line 234)
         │                    0x00007f1bc835b71a: mov    $0x1,%ebp
         │╭                   0x00007f1bc835b71f: jmpq   0x00007f1bc835b7dc
         ││↗                  0x00007f1bc835b724: mov    %edx,%r10d         ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
         │││                                                                ; - com.openkappa.runtime.fission.XorCount::fissured@74 (line 44)
         │││                                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.04%  │││              ↗   0x00007f1bc835b727: popcnt 0x28(%r11,%r8,8),%rcx
 12.24%  │││              │   0x00007f1bc835b72e: popcnt 0x20(%r11,%r8,8),%r9
  0.25%  │││              │   0x00007f1bc835b735: popcnt 0x48(%r11,%r8,8),%rdx
 10.28%  │││              │   0x00007f1bc835b73c: popcnt 0x40(%r11,%r8,8),%rsi
  0.06%  │││              │   0x00007f1bc835b743: popcnt 0x38(%r11,%r8,8),%rdi
  0.08%  │││              │   0x00007f1bc835b74a: popcnt 0x30(%r11,%r8,8),%rbp
  0.04%  │││              │   0x00007f1bc835b751: popcnt 0x18(%r11,%r8,8),%rax
  8.15%  │││              │   0x00007f1bc835b758: popcnt 0x10(%r11,%r8,8),%r14
  0.06%  │││              │   0x00007f1bc835b75f: add    %r10d,%r14d
  0.19%  │││              │   0x00007f1bc835b762: add    %r14d,%eax
  0.06%  │││              │   0x00007f1bc835b765: add    %r9d,%eax
  7.73%  │││              │   0x00007f1bc835b768: add    %ecx,%eax
  0.04%  │││              │   0x00007f1bc835b76a: add    %eax,%ebp
  0.25%  │││              │   0x00007f1bc835b76c: add    %ebp,%edi
  7.86%  │││              │   0x00007f1bc835b76e: add    %edi,%esi
  7.69%  │││              │   0x00007f1bc835b770: add    %esi,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │││              │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@86 (line 45)
         │││              │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  8.07%  │││              │   0x00007f1bc835b772: add    $0x8,%r8d          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││              │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@88 (line 44)
         │││              │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.29%  │││              │   0x00007f1bc835b776: cmp    %ebx,%r8d
         ││╰              │   0x00007f1bc835b779: jl     0x00007f1bc835b724  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         ││               │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@71 (line 44)
         ││               │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         ││               │   0x00007f1bc835b77b: vmovq  %xmm0,%r9
         ││               │   0x00007f1bc835b780: vmovq  %xmm1,%rbp
  0.19%  ││               │   0x00007f1bc835b785: cmp    0x14(%rsp),%r8d
         ││ ╭             │   0x00007f1bc835b78a: jge    0x00007f1bc835b7a0  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
         ││ │             │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@74 (line 44)
         ││ │             │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.02%  ││ │↗            │   0x00007f1bc835b78c: popcnt 0x10(%r11,%r8,8),%r10
  1.48%  ││ ││            │   0x00007f1bc835b793: add    %r10d,%edx         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         ││ ││            │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@86 (line 45)
         ││ ││            │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  1.19%  ││ ││            │   0x00007f1bc835b796: inc    %r8d               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││ ││            │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@88 (line 44)
         ││ ││            │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.56%  ││ ││            │   0x00007f1bc835b799: cmp    0x14(%rsp),%r8d
         ││ │╰            │   0x00007f1bc835b79e: jl     0x00007f1bc835b78c  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         ││ │             │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@71 (line 44)
         ││ │             │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         ││ ↘             │↗  0x00007f1bc835b7a0: mov    %r13,0x60(%rsp)
         ││               ││  0x00007f1bc835b7a5: mov    %r9,0x70(%rsp)
  0.23%  ││               ││  0x00007f1bc835b7aa: mov    0x8(%rsp),%rsi
         ││               ││  0x00007f1bc835b7af: nop
         ││               ││  0x00007f1bc835b7b0: vzeroupper 
  0.25%  ││               ││  0x00007f1bc835b7b3: callq  0x00007f1bc089cb00  ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [8]=Oop }
         ││               ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││               ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@20 (line 232)
         ││               ││                                                ;   {optimized virtual_call}
         ││               ││  0x00007f1bc835b7b8: mov    0x60(%rsp),%r13
  0.23%  ││               ││  0x00007f1bc835b7bd: movzbl 0x94(%r13),%r11d   ;*goto {reexecute=0 rethrow=0 return_oop=0}
         ││               ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@54 (line 41)
         ││               ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         ││               ││  0x00007f1bc835b7c5: mov    0x108(%r15),%r10
         ││               ││  0x00007f1bc835b7cc: add    $0x1,%rbp          ; ImmutableOopMap{r13=Oop [104]=Oop [112]=Oop [8]=Oop }
         ││               ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││               ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@33 (line 234)
  0.25%  ││               ││  0x00007f1bc835b7d0: test   %eax,(%r10)        ;   {poll}
         ││               ││  0x00007f1bc835b7d3: test   %r11d,%r11d
         ││   ╭           ││  0x00007f1bc835b7d6: jne    0x00007f1bc835ba1f  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││   │           ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@36 (line 235)
         │↘   │           ││  0x00007f1bc835b7dc: mov    0x70(%rsp),%r9
         │    │           ││  0x00007f1bc835b7e1: mov    0x10(%r9),%r8d     ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
         │    │           ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@6 (line 41)
         │    │           ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.33%  │    │           ││  0x00007f1bc835b7e5: mov    0xc(%r12,%r8,8),%r10d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         │    │           ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@9 (line 41)
         │    │           ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │           ││                                                ; implicit exception: dispatches to 0x00007f1bc835bb89
         │    │           ││  0x00007f1bc835b7ea: mov    %r10d,0x14(%rsp)
         │    │           ││  0x00007f1bc835b7ef: mov    0x14(%r9),%ebx     ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
         │    │           ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@20 (line 41)
         │    │           ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │           ││  0x00007f1bc835b7f3: mov    0xc(%r12,%rbx,8),%ecx  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         │    │           ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@23 (line 41)
         │    │           ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │           ││                                                ; implicit exception: dispatches to 0x00007f1bc835bb89
  0.21%  │    │           ││  0x00007f1bc835b7f8: lea    (%r12,%r8,8),%r11
         │    │           ││  0x00007f1bc835b7fc: test   %ecx,%ecx
         │    │╭          ││  0x00007f1bc835b7fe: jbe    0x00007f1bc835b9c5  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │    ││          ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
         │    ││          ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    ││          ││  0x00007f1bc835b804: mov    $0x1,%edi
         │    ││          ││  0x00007f1bc835b809: cmp    %ecx,%edi
  0.33%  │    ││          ││  0x00007f1bc835b80b: cmovg  %ecx,%edi
         │    ││          ││  0x00007f1bc835b80e: mov    %r11d,%edx
         │    ││          ││  0x00007f1bc835b811: shr    $0x3,%edx
         │    ││          ││  0x00007f1bc835b814: and    $0x3,%edx
  0.21%  │    ││          ││  0x00007f1bc835b817: add    %edi,%edx
         │    ││          ││  0x00007f1bc835b819: mov    $0x2,%r10d
         │    ││          ││  0x00007f1bc835b81f: sub    %edx,%r10d
         │    ││          ││  0x00007f1bc835b822: and    $0x3,%r10d
  0.33%  │    ││          ││  0x00007f1bc835b826: add    %edi,%r10d
         │    ││          ││  0x00007f1bc835b829: cmp    %ecx,%r10d
         │    ││          ││  0x00007f1bc835b82c: cmovg  %ecx,%r10d
         │    ││          ││  0x00007f1bc835b830: lea    (%r12,%rbx,8),%rdi
  0.25%  │    ││          ││  0x00007f1bc835b834: xor    %edx,%edx          ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │    ││          ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@48 (line 42)
         │    ││          ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    ││ ↗        ││  0x00007f1bc835b836: cmp    0x14(%rsp),%edx
         │    ││╭│        ││  0x00007f1bc835b83a: jge    0x00007f1bc835b9c5  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││││        ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@33 (line 41)
         │    ││││        ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    ││││        ││  0x00007f1bc835b840: cmp    0x14(%rsp),%edx
         │    ││││        ││  0x00007f1bc835b844: jae    0x00007f1bc835ba57
  0.04%  │    ││││        ││  0x00007f1bc835b84a: mov    0x10(%r11,%rdx,8),%rax  ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │    ││││        ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
         │    ││││        ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.94%  │    ││││        ││  0x00007f1bc835b84f: cmp    %ecx,%edx
         │    ││││        ││  0x00007f1bc835b851: jae    0x00007f1bc835ba7c
         │    ││││        ││  0x00007f1bc835b857: xor    0x10(%rdi,%rdx,8),%rax
         │    ││││        ││  0x00007f1bc835b85c: mov    %rax,0x10(%r11,%rdx,8)  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
         │    ││││        ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@4 (line 41)
         │    ││││        ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    ││││        ││  0x00007f1bc835b861: inc    %edx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │    ││││        ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
         │    ││││        ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.90%  │    ││││        ││  0x00007f1bc835b863: cmp    %r10d,%edx
         │    │││╰        ││  0x00007f1bc835b866: jl     0x00007f1bc835b836  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │    │││         ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
         │    │││         ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │││         ││  0x00007f1bc835b868: mov    0x14(%rsp),%r10d
         │    │││         ││  0x00007f1bc835b86d: cmp    %ecx,%r10d
         │    │││         ││  0x00007f1bc835b870: mov    %r10d,%eax
  0.40%  │    │││         ││  0x00007f1bc835b873: cmovg  %ecx,%eax
         │    │││         ││  0x00007f1bc835b876: mov    %eax,%r10d
         │    │││         ││  0x00007f1bc835b879: add    $0xffffffe1,%r10d
         │    │││         ││  0x00007f1bc835b87d: cmp    %r10d,%eax
  0.23%  │    │││         ││  0x00007f1bc835b880: mov    $0x80000000,%esi
         │    │││         ││  0x00007f1bc835b885: cmovl  %esi,%r10d
         │    │││         ││  0x00007f1bc835b889: cmp    %r10d,%edx
         │    │││ ╭       ││  0x00007f1bc835b88c: jge    0x00007f1bc835b993  ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │    │││ │       ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
         │    │││ │       ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  1.11%  │    │││ │↗      ││  0x00007f1bc835b892: vmovdqu 0x10(%rdi,%rdx,8),%ymm0
  0.31%  │    │││ ││      ││  0x00007f1bc835b898: vpxor  0x10(%r11,%rdx,8),%ymm0,%ymm0
  0.40%  │    │││ ││      ││  0x00007f1bc835b89f: vmovdqu %ymm0,0x10(%r11,%rdx,8)
  1.09%  │    │││ ││      ││  0x00007f1bc835b8a6: vmovdqu 0x30(%rdi,%rdx,8),%ymm0
  0.44%  │    │││ ││      ││  0x00007f1bc835b8ac: vpxor  0x30(%r11,%rdx,8),%ymm0,%ymm0
  1.69%  │    │││ ││      ││  0x00007f1bc835b8b3: vmovdqu %ymm0,0x30(%r11,%rdx,8)
  0.42%  │    │││ ││      ││  0x00007f1bc835b8ba: vmovdqu 0x50(%rdi,%rdx,8),%ymm0
  0.31%  │    │││ ││      ││  0x00007f1bc835b8c0: vpxor  0x50(%r11,%rdx,8),%ymm0,%ymm0
  0.77%  │    │││ ││      ││  0x00007f1bc835b8c7: vmovdqu %ymm0,0x50(%r11,%rdx,8)
  0.54%  │    │││ ││      ││  0x00007f1bc835b8ce: vmovdqu 0x70(%rdi,%rdx,8),%ymm0
  0.42%  │    │││ ││      ││  0x00007f1bc835b8d4: vpxor  0x70(%r11,%rdx,8),%ymm0,%ymm0
  2.28%  │    │││ ││      ││  0x00007f1bc835b8db: vmovdqu %ymm0,0x70(%r11,%rdx,8)
  0.33%  │    │││ ││      ││  0x00007f1bc835b8e2: vmovdqu 0x90(%rdi,%rdx,8),%ymm0
  0.46%  │    │││ ││      ││  0x00007f1bc835b8eb: vpxor  0x90(%r11,%rdx,8),%ymm0,%ymm0
  1.13%  │    │││ ││      ││  0x00007f1bc835b8f5: vmovdqu %ymm0,0x90(%r11,%rdx,8)
  0.19%  │    │││ ││      ││  0x00007f1bc835b8ff: vmovdqu 0xb0(%rdi,%rdx,8),%ymm0
  0.36%  │    │││ ││      ││  0x00007f1bc835b908: vpxor  0xb0(%r11,%rdx,8),%ymm0,%ymm0
  2.38%  │    │││ ││      ││  0x00007f1bc835b912: vmovdqu %ymm0,0xb0(%r11,%rdx,8)
  0.13%  │    │││ ││      ││  0x00007f1bc835b91c: vmovdqu 0xd0(%rdi,%rdx,8),%ymm0
  0.40%  │    │││ ││      ││  0x00007f1bc835b925: vpxor  0xd0(%r11,%rdx,8),%ymm0,%ymm0
  1.44%  │    │││ ││      ││  0x00007f1bc835b92f: vmovdqu %ymm0,0xd0(%r11,%rdx,8)
  0.15%  │    │││ ││      ││  0x00007f1bc835b939: vmovdqu 0xf0(%rdi,%rdx,8),%ymm0
  0.23%  │    │││ ││      ││  0x00007f1bc835b942: vpxor  0xf0(%r11,%rdx,8),%ymm0,%ymm0
  2.84%  │    │││ ││      ││  0x00007f1bc835b94c: vmovdqu %ymm0,0xf0(%r11,%rdx,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
         │    │││ ││      ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@50 (line 42)
         │    │││ ││      ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.19%  │    │││ ││      ││  0x00007f1bc835b956: add    $0x20,%edx         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │    │││ ││      ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
         │    │││ ││      ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.31%  │    │││ ││      ││  0x00007f1bc835b959: cmp    %r10d,%edx
         │    │││ │╰      ││  0x00007f1bc835b95c: jl     0x00007f1bc835b892  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │    │││ │       ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
         │    │││ │       ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.21%  │    │││ │       ││  0x00007f1bc835b962: mov    %eax,%esi
         │    │││ │       ││  0x00007f1bc835b964: add    $0xfffffffd,%esi
         │    │││ │       ││  0x00007f1bc835b967: cmp    %esi,%eax
         │    │││ │       ││  0x00007f1bc835b969: mov    $0x80000000,%r10d
  0.15%  │    │││ │       ││  0x00007f1bc835b96f: cmovl  %r10d,%esi
         │    │││ │       ││  0x00007f1bc835b973: cmp    %esi,%edx
         │    │││ │ ╭     ││  0x00007f1bc835b975: jge    0x00007f1bc835b993
  0.02%  │    │││ │ │     ││  0x00007f1bc835b977: nop                       ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │    │││ │ │     ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
         │    │││ │ │     ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.17%  │    │││ │ │↗    ││  0x00007f1bc835b978: vmovdqu 0x10(%rdi,%rdx,8),%ymm0
  0.96%  │    │││ │ ││    ││  0x00007f1bc835b97e: vpxor  0x10(%r11,%rdx,8),%ymm0,%ymm0
  0.59%  │    │││ │ ││    ││  0x00007f1bc835b985: vmovdqu %ymm0,0x10(%r11,%rdx,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
         │    │││ │ ││    ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@50 (line 42)
         │    │││ │ ││    ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.04%  │    │││ │ ││    ││  0x00007f1bc835b98c: add    $0x4,%edx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │    │││ │ ││    ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
         │    │││ │ ││    ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.77%  │    │││ │ ││    ││  0x00007f1bc835b98f: cmp    %esi,%edx
         │    │││ │ │╰    ││  0x00007f1bc835b991: jl     0x00007f1bc835b978  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │    │││ │ │     ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
         │    │││ │ │     ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │││ ↘ ↘     ││  0x00007f1bc835b993: cmp    %ecx,%edx
         │    │││     ╭   ││  0x00007f1bc835b995: jge    0x00007f1bc835b9c5
  0.02%  │    │││     │   ││  0x00007f1bc835b997: nop                       ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │    │││     │   ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@48 (line 42)
         │    │││     │   ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.06%  │    │││     │ ↗ ││  0x00007f1bc835b998: cmp    0x14(%rsp),%edx
         │    │││     │╭│ ││  0x00007f1bc835b99c: jge    0x00007f1bc835b9c5  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    │││     │││ ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@33 (line 41)
         │    │││     │││ ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.17%  │    │││     │││ ││  0x00007f1bc835b99e: cmp    0x14(%rsp),%edx
         │    │││     │││ ││  0x00007f1bc835b9a2: jae    0x00007f1bc835ba57
         │    │││     │││ ││  0x00007f1bc835b9a8: mov    0x10(%r11,%rdx,8),%rax  ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │    │││     │││ ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
         │    │││     │││ ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.02%  │    │││     │││ ││  0x00007f1bc835b9ad: cmp    %ecx,%edx
         │    │││     │││ ││  0x00007f1bc835b9af: jae    0x00007f1bc835ba7c
  0.06%  │    │││     │││ ││  0x00007f1bc835b9b5: xor    0x10(%rdi,%rdx,8),%rax
  0.15%  │    │││     │││ ││  0x00007f1bc835b9ba: mov    %rax,0x10(%r11,%rdx,8)  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
         │    │││     │││ ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@4 (line 41)
         │    │││     │││ ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.02%  │    │││     │││ ││  0x00007f1bc835b9bf: inc    %edx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │    │││     │││ ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
         │    │││     │││ ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │││     │││ ││  0x00007f1bc835b9c1: cmp    %ecx,%edx
         │    │││     ││╰ ││  0x00007f1bc835b9c3: jl     0x00007f1bc835b998  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    │││     ││  ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@33 (line 41)
         │    │││     ││  ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.02%  │    │↘↘     ↘↘  ││  0x00007f1bc835b9c5: mov    0x14(%rsp),%r10d
  0.13%  │    │           ││  0x00007f1bc835b9ca: test   %r10d,%r10d
         │    │          ╭││  0x00007f1bc835b9cd: jbe    0x00007f1bc835ba13  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │    │          │││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@71 (line 44)
         │    │          │││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │          │││  0x00007f1bc835b9cf: mov    %r10d,%ecx
         │    │          │││  0x00007f1bc835b9d2: dec    %ecx
  0.04%  │    │          │││  0x00007f1bc835b9d4: cmp    %r10d,%ecx
         │    │          │││  0x00007f1bc835b9d7: jae    0x00007f1bc835baac
  0.27%  │    │          │││  0x00007f1bc835b9dd: popcnt 0x10(%r12,%r8,8),%r10  ;*invokestatic bitCount {reexecute=0 rethrow=0 return_oop=0}
         │    │          │││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@83 (line 45)
         │    │          │││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.02%  │    │          │││  0x00007f1bc835b9e4: mov    0x14(%rsp),%ebx
         │    │          │││  0x00007f1bc835b9e8: add    $0xfffffff9,%ebx
  0.08%  │    │          │││  0x00007f1bc835b9eb: cmp    %ebx,%ecx
  0.31%  │    │          │││  0x00007f1bc835b9ed: mov    $0x80000000,%ecx
         │    │          │││  0x00007f1bc835b9f2: cmovl  %ecx,%ebx
  0.02%  │    │          │││  0x00007f1bc835b9f5: cmp    $0x1,%ebx
         │    │          │││  0x00007f1bc835b9f8: jle    0x00007f1bc835bac8
  0.15%  │    │          │││  0x00007f1bc835b9fe: mov    $0x1,%r8d
  0.17%  │    │          │││  0x00007f1bc835ba04: vmovq  %r9,%xmm0
         │    │          │││  0x00007f1bc835ba09: vmovq  %rbp,%xmm1
         │    │          │╰│  0x00007f1bc835ba0e: jmpq   0x00007f1bc835b727
         │    │          ↘ │  0x00007f1bc835ba13: xor    %edx,%edx
         │    │            ╰  0x00007f1bc835ba15: jmpq   0x00007f1bc835b7a0
         ↘    │               0x00007f1bc835ba1a: mov    $0x1,%ebp          ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
              │                                                             ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@36 (line 235)
              ↘               0x00007f1bc835ba1f: vzeroupper 
                              0x00007f1bc835ba22: movabs $0x7f1bdf9a3cb0,%r10
                              0x00007f1bc835ba2c: callq  *%r10              ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@37 (line 235)
....................................................................................................
 96.91%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.91%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 449 (733 bytes) 
  0.98%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 405 (42 bytes) 
  0.36%   [kernel.kallsyms]  do_syscall_64 (0 bytes) 
  0.19%   [kernel.kallsyms]  entry_SYSCALL_64 (0 bytes) 
  0.04%   [kernel.kallsyms]  __x64_sys_gettid (0 bytes) 
  0.04%   [kernel.kallsyms]  common_file_perm (11 bytes) 
  0.04%   [kernel.kallsyms]  copy_user_generic_unrolled (15 bytes) 
  0.02%   [kernel.kallsyms]  prepare_exit_to_usermode (0 bytes) 
  0.02%   [kernel.kallsyms]  do_syscall_64 (0 bytes) 
  0.02%   [kernel.kallsyms]  intel_pmu_disable_all (0 bytes) 
  0.02%   [kernel.kallsyms]  switch_fpu_return (0 bytes) 
  0.02%   [kernel.kallsyms]  native_write_msr (0 bytes) 
  0.02%   [kernel.kallsyms]  crc32c_pcl_intel_update (0 bytes) 
  0.02%   [kernel.kallsyms]  __task_pid_nr_ns (0 bytes) 
  0.02%   [kernel.kallsyms]  __task_pid_nr_ns (0 bytes) 
  0.02%   [kernel.kallsyms]  select_task_rq_fair (0 bytes) 
  0.02%   [kernel.kallsyms]  account_entity_dequeue (0 bytes) 
  0.02%   [kernel.kallsyms]  reweight_entity (0 bytes) 
  0.02%   [kernel.kallsyms]  check_preempt_wakeup (0 bytes) 
  0.02%   [kernel.kallsyms]  enqueue_entity (0 bytes) 
  1.15%  <...other 55 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.91%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 449 
  0.98%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 405 
  0.38%   [kernel.kallsyms]  do_syscall_64 
  0.19%   [kernel.kallsyms]  entry_SYSCALL_64 
  0.06%   [kernel.kallsyms]  common_file_perm 
  0.06%           libjvm.so  defaultStream::hold 
  0.04%   [kernel.kallsyms]  copy_user_generic_unrolled 
  0.04%   [kernel.kallsyms]  __task_pid_nr_ns 
  0.04%           libjvm.so  outputStream::do_vsnprintf_and_write_with_automatic_buffer 
  0.04%   [kernel.kallsyms]  __x64_sys_gettid 
  0.04%         interpreter  invokevirtual  182 invokevirtual  
  0.02%   [kernel.kallsyms]  crc32c_pcl_intel_update 
  0.02%           libjvm.so  PhaseIdealLoop::Dominators 
  0.02%        libc-2.27.so  vfprintf 
  0.02%   [kernel.kallsyms]  ksys_write 
  0.02%   [kernel.kallsyms]  up_write 
  0.02%   [kernel.kallsyms]  intel_pmu_disable_all 
  0.02%           libjvm.so  SignatureStream::SignatureStream 
  0.02%      hsdis-amd64.so  bfd_scan_arch 
  0.02%   [kernel.kallsyms]  __fsnotify_parent 
  1.00%  <...other 48 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.89%         c2, level 4
  1.50%   [kernel.kallsyms]
  0.36%           libjvm.so
  0.10%         interpreter
  0.06%      hsdis-amd64.so
  0.06%        libc-2.27.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9-Ubuntu-0ubuntu2.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.openkappa.runtime.fission.XorCount.fissured
# Parameters: (size = 512)

# Run progress: 10.00% complete, ETA 00:02:23
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 340.205 ns/op
# Warmup Iteration   2: 353.161 ns/op
# Warmup Iteration   3: 284.243 ns/op
# Warmup Iteration   4: 283.560 ns/op
# Warmup Iteration   5: 283.250 ns/op
Iteration   1: 286.490 ns/op
Iteration   2: 291.194 ns/op
Iteration   3: 283.068 ns/op
Iteration   4: 283.081 ns/op
Iteration   5: 284.837 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.runtime.fission.XorCount.fissured":
  285.734 ±(99.9%) 12.963 ns/op [Average]
  (min, avg, max) = (283.068, 285.734, 291.194), stdev = 3.366
  CI (99.9%): [272.771, 298.697] (assumes normal distribution)

Secondary result "com.openkappa.runtime.fission.XorCount.fissured:·asm":
PrintAssembly processed: 74798 total address lines.
Perf output processed (skipped 9.260 seconds):
 Column 1: cycles (4495 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 450 (758 bytes) 

                              0x00007f3b1c35bcdc: mov    0x60(%rsp),%r13
                              0x00007f3b1c35bce1: movzbl 0x94(%r13),%r10d   ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@30 (line 234)
                                                                            ; implicit exception: dispatches to 0x00007f3b1c35c1d8
                              0x00007f3b1c35bce9: test   %r10d,%r10d
         ╭                    0x00007f3b1c35bcec: jne    0x00007f3b1c35c002  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@33 (line 234)
         │                    0x00007f3b1c35bcf2: mov    $0x1,%ebp
         │╭                   0x00007f3b1c35bcf7: jmpq   0x00007f3b1c35bdbc
         ││                   0x00007f3b1c35bcfc: nopl   0x0(%rax)
  0.02%  ││↗                  0x00007f3b1c35bd00: mov    %edx,%ecx          ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
         │││                                                                ; - com.openkappa.runtime.fission.XorCount::fissured@74 (line 44)
         │││                                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.09%  │││              ↗   0x00007f3b1c35bd02: popcnt 0x28(%r11,%rbx,8),%r8
 12.50%  │││              │   0x00007f3b1c35bd09: popcnt 0x20(%r11,%rbx,8),%rdi
  0.02%  │││              │   0x00007f3b1c35bd10: popcnt 0x48(%r11,%rbx,8),%rdx
 12.86%  │││              │   0x00007f3b1c35bd17: popcnt 0x40(%r11,%rbx,8),%r9
  0.02%  │││              │   0x00007f3b1c35bd1e: popcnt 0x38(%r11,%rbx,8),%rax
  0.02%  │││              │   0x00007f3b1c35bd25: popcnt 0x30(%r11,%rbx,8),%rsi
         │││              │   0x00007f3b1c35bd2c: popcnt 0x18(%r11,%rbx,8),%r13
  7.61%  │││              │   0x00007f3b1c35bd33: popcnt 0x10(%r11,%rbx,8),%rbp
         │││              │   0x00007f3b1c35bd3a: add    %ecx,%ebp
  0.07%  │││              │   0x00007f3b1c35bd3c: add    %ebp,%r13d
  0.02%  │││              │   0x00007f3b1c35bd3f: add    %edi,%r13d
  8.25%  │││              │   0x00007f3b1c35bd42: add    %r8d,%r13d
  0.07%  │││              │   0x00007f3b1c35bd45: add    %r13d,%esi
  0.07%  │││              │   0x00007f3b1c35bd48: add    %esi,%eax
  7.94%  │││              │   0x00007f3b1c35bd4a: add    %eax,%r9d
  8.10%  │││              │   0x00007f3b1c35bd4d: add    %r9d,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │││              │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@86 (line 45)
         │││              │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  8.79%  │││              │   0x00007f3b1c35bd50: add    $0x8,%ebx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │││              │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@88 (line 44)
         │││              │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │││              │   0x00007f3b1c35bd53: cmp    %r10d,%ebx
         ││╰              │   0x00007f3b1c35bd56: jl     0x00007f3b1c35bd00  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         ││               │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@71 (line 44)
         ││               │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         ││               │   0x00007f3b1c35bd58: mov    %r14,%r9
         ││               │   0x00007f3b1c35bd5b: vmovq  %xmm0,%r13
  0.13%  ││               │   0x00007f3b1c35bd60: vmovq  %xmm1,%rbp
         ││               │   0x00007f3b1c35bd65: cmp    0x14(%rsp),%ebx
         ││ ╭             │   0x00007f3b1c35bd69: jge    0x00007f3b1c35bd7e
         ││ │             │   0x00007f3b1c35bd6b: nop                       ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
         ││ │             │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@74 (line 44)
         ││ │             │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         ││ │↗            │   0x00007f3b1c35bd6c: popcnt 0x10(%r11,%rbx,8),%r8
  1.18%  ││ ││            │   0x00007f3b1c35bd73: add    %r8d,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         ││ ││            │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@86 (line 45)
         ││ ││            │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.31%  ││ ││            │   0x00007f3b1c35bd76: inc    %ebx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││ ││            │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@88 (line 44)
         ││ ││            │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         ││ ││            │   0x00007f3b1c35bd78: cmp    0x14(%rsp),%ebx
         ││ │╰            │   0x00007f3b1c35bd7c: jl     0x00007f3b1c35bd6c  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         ││ │             │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@71 (line 44)
         ││ │             │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         ││ ↘             │↗  0x00007f3b1c35bd7e: mov    %r13,0x60(%rsp)
         ││               ││  0x00007f3b1c35bd83: mov    %r9,0x70(%rsp)
  0.22%  ││               ││  0x00007f3b1c35bd88: mov    0x8(%rsp),%rsi
         ││               ││  0x00007f3b1c35bd8d: data16 xchg %ax,%ax
         ││               ││  0x00007f3b1c35bd90: vzeroupper 
  0.11%  ││               ││  0x00007f3b1c35bd93: callq  0x00007f3b1489cb00  ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [8]=Oop }
         ││               ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││               ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@20 (line 232)
         ││               ││                                                ;   {optimized virtual_call}
         ││               ││  0x00007f3b1c35bd98: mov    0x60(%rsp),%r13
  0.07%  ││               ││  0x00007f3b1c35bd9d: movzbl 0x94(%r13),%r10d   ;*goto {reexecute=0 rethrow=0 return_oop=0}
         ││               ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@54 (line 41)
         ││               ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         ││               ││  0x00007f3b1c35bda5: mov    0x108(%r15),%r11
         ││               ││  0x00007f3b1c35bdac: add    $0x1,%rbp          ; ImmutableOopMap{r13=Oop [104]=Oop [112]=Oop [8]=Oop }
         ││               ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││               ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@33 (line 234)
  0.18%  ││               ││  0x00007f3b1c35bdb0: test   %eax,(%r11)        ;   {poll}
         ││               ││  0x00007f3b1c35bdb3: test   %r10d,%r10d
         ││   ╭           ││  0x00007f3b1c35bdb6: jne    0x00007f3b1c35c007  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││   │           ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@36 (line 235)
         │↘   │           ││  0x00007f3b1c35bdbc: mov    0x70(%rsp),%r9
         │    │           ││  0x00007f3b1c35bdc1: mov    0x10(%r9),%r10d    ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
         │    │           ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@6 (line 41)
         │    │           ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.09%  │    │           ││  0x00007f3b1c35bdc5: mov    0xc(%r12,%r10,8),%r8d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         │    │           ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@9 (line 41)
         │    │           ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │           ││                                                ; implicit exception: dispatches to 0x00007f3b1c35c179
         │    │           ││  0x00007f3b1c35bdca: mov    %r8d,0x14(%rsp)
         │    │           ││  0x00007f3b1c35bdcf: mov    0x14(%r9),%ebx     ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
         │    │           ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@20 (line 41)
         │    │           ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │           ││  0x00007f3b1c35bdd3: mov    0xc(%r12,%rbx,8),%edx  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         │    │           ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@23 (line 41)
         │    │           ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │           ││                                                ; implicit exception: dispatches to 0x00007f3b1c35c179
  0.16%  │    │           ││  0x00007f3b1c35bdd8: lea    (%r12,%r10,8),%r11
         │    │           ││  0x00007f3b1c35bddc: test   %edx,%edx
         │    │╭          ││  0x00007f3b1c35bdde: jbe    0x00007f3b1c35bfa5  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │    ││          ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
         │    ││          ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    ││          ││  0x00007f3b1c35bde4: mov    $0x1,%ecx
         │    ││          ││  0x00007f3b1c35bde9: cmp    %edx,%ecx
  0.16%  │    ││          ││  0x00007f3b1c35bdeb: mov    $0x1,%r8d
         │    ││          ││  0x00007f3b1c35bdf1: cmovg  %edx,%r8d
  0.02%  │    ││          ││  0x00007f3b1c35bdf5: mov    %r11d,%ecx
         │    ││          ││  0x00007f3b1c35bdf8: shr    $0x3,%ecx
  0.13%  │    ││          ││  0x00007f3b1c35bdfb: and    $0x3,%ecx
         │    ││          ││  0x00007f3b1c35bdfe: add    %r8d,%ecx
         │    ││          ││  0x00007f3b1c35be01: mov    $0x2,%edi
         │    ││          ││  0x00007f3b1c35be06: sub    %ecx,%edi
  0.11%  │    ││          ││  0x00007f3b1c35be08: and    $0x3,%edi
         │    ││          ││  0x00007f3b1c35be0b: add    %r8d,%edi
         │    ││          ││  0x00007f3b1c35be0e: cmp    %edx,%edi
         │    ││          ││  0x00007f3b1c35be10: cmovg  %edx,%edi
  0.09%  │    ││          ││  0x00007f3b1c35be13: lea    (%r12,%rbx,8),%rax
         │    ││          ││  0x00007f3b1c35be17: xor    %ecx,%ecx          ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │    ││          ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@48 (line 42)
         │    ││          ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    ││ ↗        ││  0x00007f3b1c35be19: cmp    0x14(%rsp),%ecx
         │    ││╭│        ││  0x00007f3b1c35be1d: jge    0x00007f3b1c35bfa5  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    ││││        ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@33 (line 41)
         │    ││││        ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    ││││        ││  0x00007f3b1c35be23: cmp    0x14(%rsp),%ecx
         │    ││││        ││  0x00007f3b1c35be27: jae    0x00007f3b1c35c03f
  0.29%  │    ││││        ││  0x00007f3b1c35be2d: mov    0x10(%r11,%rcx,8),%r8  ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │    ││││        ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
         │    ││││        ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    ││││        ││  0x00007f3b1c35be32: cmp    %edx,%ecx
         │    ││││        ││  0x00007f3b1c35be34: jae    0x00007f3b1c35c064
         │    ││││        ││  0x00007f3b1c35be3a: xor    0x10(%rax,%rcx,8),%r8
         │    ││││        ││  0x00007f3b1c35be3f: mov    %r8,0x10(%r11,%rcx,8)  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
         │    ││││        ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@4 (line 41)
         │    ││││        ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.16%  │    ││││        ││  0x00007f3b1c35be44: inc    %ecx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │    ││││        ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
         │    ││││        ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    ││││        ││  0x00007f3b1c35be46: cmp    %edi,%ecx
         │    │││╰        ││  0x00007f3b1c35be48: jl     0x00007f3b1c35be19  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │    │││         ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
         │    │││         ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │││         ││  0x00007f3b1c35be4a: mov    0x14(%rsp),%r8d
         │    │││         ││  0x00007f3b1c35be4f: cmp    %edx,%r8d
  0.16%  │    │││         ││  0x00007f3b1c35be52: mov    %r8d,%edi
         │    │││         ││  0x00007f3b1c35be55: cmovg  %edx,%edi
         │    │││         ││  0x00007f3b1c35be58: mov    %edi,%esi
         │    │││         ││  0x00007f3b1c35be5a: add    $0xffffffe1,%esi
  0.11%  │    │││         ││  0x00007f3b1c35be5d: cmp    %esi,%edi
         │    │││         ││  0x00007f3b1c35be5f: mov    $0x80000000,%r8d
         │    │││         ││  0x00007f3b1c35be65: cmovl  %r8d,%esi
         │    │││         ││  0x00007f3b1c35be69: cmp    %esi,%ecx
         │    │││ ╭       ││  0x00007f3b1c35be6b: jge    0x00007f3b1c35bf74  ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │    │││ │       ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
         │    │││ │       ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  2.42%  │    │││ │↗      ││  0x00007f3b1c35be71: vmovdqu 0x10(%rax,%rcx,8),%ymm0
         │    │││ ││      ││  0x00007f3b1c35be77: vpxor  0x10(%r11,%rcx,8),%ymm0,%ymm0
  0.09%  │    │││ ││      ││  0x00007f3b1c35be7e: vmovdqu %ymm0,0x10(%r11,%rcx,8)
  1.82%  │    │││ ││      ││  0x00007f3b1c35be85: vmovdqu 0x30(%rax,%rcx,8),%ymm0
         │    │││ ││      ││  0x00007f3b1c35be8b: vpxor  0x30(%r11,%rcx,8),%ymm0,%ymm0
  2.14%  │    │││ ││      ││  0x00007f3b1c35be92: vmovdqu %ymm0,0x30(%r11,%rcx,8)
  0.62%  │    │││ ││      ││  0x00007f3b1c35be99: vmovdqu 0x50(%rax,%rcx,8),%ymm0
         │    │││ ││      ││  0x00007f3b1c35be9f: vpxor  0x50(%r11,%rcx,8),%ymm0,%ymm0
  1.45%  │    │││ ││      ││  0x00007f3b1c35bea6: vmovdqu %ymm0,0x50(%r11,%rcx,8)
  0.76%  │    │││ ││      ││  0x00007f3b1c35bead: vmovdqu 0x70(%rax,%rcx,8),%ymm0
         │    │││ ││      ││  0x00007f3b1c35beb3: vpxor  0x70(%r11,%rcx,8),%ymm0,%ymm0
  2.58%  │    │││ ││      ││  0x00007f3b1c35beba: vmovdqu %ymm0,0x70(%r11,%rcx,8)
  0.29%  │    │││ ││      ││  0x00007f3b1c35bec1: vmovdqu 0x90(%rax,%rcx,8),%ymm0
         │    │││ ││      ││  0x00007f3b1c35beca: vpxor  0x90(%r11,%rcx,8),%ymm0,%ymm0
  1.82%  │    │││ ││      ││  0x00007f3b1c35bed4: vmovdqu %ymm0,0x90(%r11,%rcx,8)
  0.33%  │    │││ ││      ││  0x00007f3b1c35bede: vmovdqu 0xb0(%rax,%rcx,8),%ymm0
         │    │││ ││      ││  0x00007f3b1c35bee7: vpxor  0xb0(%r11,%rcx,8),%ymm0,%ymm0
  3.25%  │    │││ ││      ││  0x00007f3b1c35bef1: vmovdqu %ymm0,0xb0(%r11,%rcx,8)
  0.18%  │    │││ ││      ││  0x00007f3b1c35befb: vmovdqu 0xd0(%rax,%rcx,8),%ymm0
         │    │││ ││      ││  0x00007f3b1c35bf04: vpxor  0xd0(%r11,%rcx,8),%ymm0,%ymm0
  2.00%  │    │││ ││      ││  0x00007f3b1c35bf0e: vmovdqu %ymm0,0xd0(%r11,%rcx,8)
  0.24%  │    │││ ││      ││  0x00007f3b1c35bf18: vmovdqu 0xf0(%rax,%rcx,8),%ymm0
         │    │││ ││      ││  0x00007f3b1c35bf21: vpxor  0xf0(%r11,%rcx,8),%ymm0,%ymm0
  3.72%  │    │││ ││      ││  0x00007f3b1c35bf2b: vmovdqu %ymm0,0xf0(%r11,%rcx,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
         │    │││ ││      ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@50 (line 42)
         │    │││ ││      ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.11%  │    │││ ││      ││  0x00007f3b1c35bf35: add    $0x20,%ecx         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │    │││ ││      ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
         │    │││ ││      ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │││ ││      ││  0x00007f3b1c35bf38: cmp    %esi,%ecx
         │    │││ │╰      ││  0x00007f3b1c35bf3a: jl     0x00007f3b1c35be71  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │    │││ │       ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
         │    │││ │       ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.13%  │    │││ │       ││  0x00007f3b1c35bf40: mov    %edi,%r8d
         │    │││ │       ││  0x00007f3b1c35bf43: add    $0xfffffffd,%r8d
         │    │││ │       ││  0x00007f3b1c35bf47: cmp    %r8d,%edi
         │    │││ │       ││  0x00007f3b1c35bf4a: mov    $0x80000000,%esi
  0.09%  │    │││ │       ││  0x00007f3b1c35bf4f: cmovl  %esi,%r8d
         │    │││ │       ││  0x00007f3b1c35bf53: cmp    %r8d,%ecx
         │    │││ │ ╭     ││  0x00007f3b1c35bf56: jge    0x00007f3b1c35bf74  ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │    │││ │ │     ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
         │    │││ │ │     ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.56%  │    │││ │ │↗    ││  0x00007f3b1c35bf58: vmovdqu 0x10(%rax,%rcx,8),%ymm0
         │    │││ │ ││    ││  0x00007f3b1c35bf5e: vpxor  0x10(%r11,%rcx,8),%ymm0,%ymm0
  0.58%  │    │││ │ ││    ││  0x00007f3b1c35bf65: vmovdqu %ymm0,0x10(%r11,%rcx,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
         │    │││ │ ││    ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@50 (line 42)
         │    │││ │ ││    ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.27%  │    │││ │ ││    ││  0x00007f3b1c35bf6c: add    $0x4,%ecx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │    │││ │ ││    ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
         │    │││ │ ││    ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │││ │ ││    ││  0x00007f3b1c35bf6f: cmp    %r8d,%ecx
         │    │││ │ │╰    ││  0x00007f3b1c35bf72: jl     0x00007f3b1c35bf58  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │    │││ │ │     ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
         │    │││ │ │     ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.07%  │    │││ ↘ ↘     ││  0x00007f3b1c35bf74: cmp    %edx,%ecx
         │    │││     ╭   ││  0x00007f3b1c35bf76: jge    0x00007f3b1c35bfa5  ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │    │││     │   ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@48 (line 42)
         │    │││     │   ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │││     │ ↗ ││  0x00007f3b1c35bf78: cmp    0x14(%rsp),%ecx
         │    │││     │╭│ ││  0x00007f3b1c35bf7c: jge    0x00007f3b1c35bfa5  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    │││     │││ ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@33 (line 41)
         │    │││     │││ ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.04%  │    │││     │││ ││  0x00007f3b1c35bf7e: cmp    0x14(%rsp),%ecx
         │    │││     │││ ││  0x00007f3b1c35bf82: jae    0x00007f3b1c35c03f
         │    │││     │││ ││  0x00007f3b1c35bf88: mov    0x10(%r11,%rcx,8),%r8  ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │    │││     │││ ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
         │    │││     │││ ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.18%  │    │││     │││ ││  0x00007f3b1c35bf8d: cmp    %edx,%ecx
         │    │││     │││ ││  0x00007f3b1c35bf8f: jae    0x00007f3b1c35c064
         │    │││     │││ ││  0x00007f3b1c35bf95: xor    0x10(%rax,%rcx,8),%r8
  0.09%  │    │││     │││ ││  0x00007f3b1c35bf9a: mov    %r8,0x10(%r11,%rcx,8)  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
         │    │││     │││ ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@4 (line 41)
         │    │││     │││ ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │││     │││ ││  0x00007f3b1c35bf9f: inc    %ecx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │    │││     │││ ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
         │    │││     │││ ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.16%  │    │││     │││ ││  0x00007f3b1c35bfa1: cmp    %edx,%ecx
         │    │││     ││╰ ││  0x00007f3b1c35bfa3: jl     0x00007f3b1c35bf78  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │    │││     ││  ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@33 (line 41)
         │    │││     ││  ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │↘↘     ↘↘  ││  0x00007f3b1c35bfa5: mov    0x14(%rsp),%r8d
         │    │           ││  0x00007f3b1c35bfaa: test   %r8d,%r8d
         │    │          ╭││  0x00007f3b1c35bfad: jbe    0x00007f3b1c35bffb  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │    │          │││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@71 (line 44)
         │    │          │││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    │          │││  0x00007f3b1c35bfaf: dec    %r8d
  0.16%  │    │          │││  0x00007f3b1c35bfb2: cmp    0x14(%rsp),%r8d
         │    │          │││  0x00007f3b1c35bfb7: jae    0x00007f3b1c35c094
  0.04%  │    │          │││  0x00007f3b1c35bfbd: popcnt 0x10(%r12,%r10,8),%rcx  ;*invokestatic bitCount {reexecute=0 rethrow=0 return_oop=0}
         │    │          │││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@83 (line 45)
         │    │          │││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.04%  │    │          │││  0x00007f3b1c35bfc4: mov    0x14(%rsp),%r10d
         │    │          │││  0x00007f3b1c35bfc9: add    $0xfffffff9,%r10d
  0.07%  │    │          │││  0x00007f3b1c35bfcd: cmp    %r10d,%r8d
  0.11%  │    │          │││  0x00007f3b1c35bfd0: mov    $0x80000000,%r8d
         │    │          │││  0x00007f3b1c35bfd6: cmovl  %r8d,%r10d
         │    │          │││  0x00007f3b1c35bfda: cmp    $0x1,%r10d
         │    │          │││  0x00007f3b1c35bfde: jle    0x00007f3b1c35c0b0
  0.22%  │    │          │││  0x00007f3b1c35bfe4: mov    $0x1,%ebx
         │    │          │││  0x00007f3b1c35bfe9: mov    %r9,%r14
         │    │          │││  0x00007f3b1c35bfec: vmovq  %r13,%xmm0
  0.02%  │    │          │││  0x00007f3b1c35bff1: vmovq  %rbp,%xmm1
  0.18%  │    │          │╰│  0x00007f3b1c35bff6: jmpq   0x00007f3b1c35bd02
         │    │          ↘ │  0x00007f3b1c35bffb: xor    %edx,%edx
         │    │            ╰  0x00007f3b1c35bffd: jmpq   0x00007f3b1c35bd7e
         ↘    │               0x00007f3b1c35c002: mov    $0x1,%ebp          ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
              │                                                             ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@36 (line 235)
              ↘               0x00007f3b1c35c007: vzeroupper 
                              0x00007f3b1c35c00a: movabs $0x7f3b338abcb0,%r10
                              0x00007f3b1c35c014: callq  *%r10              ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@37 (line 235)
                              0x00007f3b1c35c017: mov    0x68(%rsp),%r10
                              0x00007f3b1c35c01c: mov    %rbp,0x18(%r10)    ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 96.95%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.95%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 450 (758 bytes) 
  0.58%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 407 (42 bytes) 
  0.42%   [kernel.kallsyms]  do_syscall_64 (3 bytes) 
  0.29%   [kernel.kallsyms]  syscall_return_via_sysret (4 bytes) 
  0.13%   [kernel.kallsyms]  entry_SYSCALL_64 (41 bytes) 
  0.07%   [kernel.kallsyms]  _raw_spin_lock_irqsave (32 bytes) 
  0.04%        libc-2.27.so  __strlen_avx2 (11 bytes) 
  0.02%   [kernel.kallsyms]  do_syscall_64 (0 bytes) 
  0.02%   [kernel.kallsyms]  do_syscall_64 (0 bytes) 
  0.02%   [kernel.kallsyms]  native_sched_clock (0 bytes) 
  0.02%   [kernel.kallsyms]  fpregs_assert_state_consistent (0 bytes) 
  0.02%   [kernel.kallsyms]  native_write_msr (0 bytes) 
  0.02%   [kernel.kallsyms]  crc32c_pcl_intel_update (0 bytes) 
  0.02%   [kernel.kallsyms]  __x64_sys_gettid (0 bytes) 
  0.02%   [kernel.kallsyms]  pick_next_entity (0 bytes) 
  0.02%   [kernel.kallsyms]  enqueue_task_fair (0 bytes) 
  0.02%   [kernel.kallsyms]  __wake_up_common (0 bytes) 
  0.02%   [kernel.kallsyms]  __update_load_avg_se (0 bytes) 
  0.02%   [kernel.kallsyms]  psi_task_change (0 bytes) 
  0.02%   [kernel.kallsyms]  psi_task_change (0 bytes) 
  1.20%  <...other 54 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.95%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 450 
  0.58%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 407 
  0.47%   [kernel.kallsyms]  do_syscall_64 
  0.29%   [kernel.kallsyms]  syscall_return_via_sysret 
  0.13%   [kernel.kallsyms]  entry_SYSCALL_64 
  0.07%   [kernel.kallsyms]  _raw_spin_lock_irqsave 
  0.04%        libc-2.27.so  vfprintf 
  0.04%   [kernel.kallsyms]  jbd2_journal_stop 
  0.04%   [kernel.kallsyms]  psi_task_change 
  0.04%   [kernel.kallsyms]  copyin 
  0.04%        libc-2.27.so  __strlen_avx2 
  0.04%        libc-2.27.so  __strchrnul_avx2 
  0.02%   [kernel.kallsyms]  crc32c_pcl_intel_update 
  0.02%   [kernel.kallsyms]  __schedule 
  0.02%         interpreter  iconst_0  3 iconst_0  
  0.02%         interpreter  invoke return entry points  
  0.02%   [kernel.kallsyms]  rb_next 
  0.02%           libjvm.so  Method::line_number_from_bci 
  0.02%   [kernel.kallsyms]  __fsnotify_parent 
  0.02%         classes.jsa  [unknown] 
  1.05%  <...other 47 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.53%         c2, level 4
  1.69%   [kernel.kallsyms]
  0.40%           libjvm.so
  0.22%        libc-2.27.so
  0.07%         interpreter
  0.02%      hsdis-amd64.so
  0.02%         classes.jsa
  0.02%      perf-18037.map
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9-Ubuntu-0ubuntu2.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.openkappa.runtime.fission.XorCount.fissured
# Parameters: (size = 1024)

# Run progress: 20.00% complete, ETA 00:02:12
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 681.231 ns/op
# Warmup Iteration   2: 607.620 ns/op
# Warmup Iteration   3: 607.187 ns/op
# Warmup Iteration   4: 568.619 ns/op
# Warmup Iteration   5: 563.062 ns/op
Iteration   1: 569.804 ns/op
Iteration   2: 588.476 ns/op
Iteration   3: 563.488 ns/op
Iteration   4: 562.850 ns/op
Iteration   5: 563.925 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.runtime.fission.XorCount.fissured":
  569.708 ±(99.9%) 41.803 ns/op [Average]
  (min, avg, max) = (562.850, 569.708, 588.476), stdev = 10.856
  CI (99.9%): [527.905, 611.512] (assumes normal distribution)

Secondary result "com.openkappa.runtime.fission.XorCount.fissured:·asm":
PrintAssembly processed: 73571 total address lines.
Perf output processed (skipped 8.926 seconds):
 Column 1: cycles (4706 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 462 (216 bytes) 

               0x00007fbb6c154eec: mov    0x60(%rsp),%r13
               0x00007fbb6c154ef1: movzbl 0x94(%r13),%r11d   ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                             ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@30 (line 234)
                                                             ; implicit exception: dispatches to 0x00007fbb6c1553f0
               0x00007fbb6c154ef9: test   %r11d,%r11d
               0x00007fbb6c154efc: jne    0x00007fbb6c155212  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                             ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@33 (line 234)
               0x00007fbb6c154f02: mov    $0x1,%ebp
         ╭     0x00007fbb6c154f07: jmpq   0x00007fbb6c154fcc
         │     0x00007fbb6c154f0c: nopl   0x0(%rax)
  0.06%  │↗    0x00007fbb6c154f10: mov    %edx,%ecx          ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@74 (line 44)
         ││                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.02%  ││    0x00007fbb6c154f12: popcnt 0x28(%r11,%rbx,8),%r8
 12.79%  ││    0x00007fbb6c154f19: popcnt 0x20(%r11,%rbx,8),%rdi
  0.04%  ││    0x00007fbb6c154f20: popcnt 0x48(%r11,%rbx,8),%rdx
 12.52%  ││    0x00007fbb6c154f27: popcnt 0x40(%r11,%rbx,8),%r9
  0.02%  ││    0x00007fbb6c154f2e: popcnt 0x38(%r11,%rbx,8),%rax
  0.02%  ││    0x00007fbb6c154f35: popcnt 0x30(%r11,%rbx,8),%rsi
  0.06%  ││    0x00007fbb6c154f3c: popcnt 0x18(%r11,%rbx,8),%r13
  8.14%  ││    0x00007fbb6c154f43: popcnt 0x10(%r11,%rbx,8),%rbp
         ││    0x00007fbb6c154f4a: add    %ecx,%ebp
  0.02%  ││    0x00007fbb6c154f4c: add    %ebp,%r13d
  0.02%  ││    0x00007fbb6c154f4f: add    %edi,%r13d
  8.41%  ││    0x00007fbb6c154f52: add    %r8d,%r13d
  0.02%  ││    0x00007fbb6c154f55: add    %r13d,%esi
  0.02%  ││    0x00007fbb6c154f58: add    %esi,%eax
  7.95%  ││    0x00007fbb6c154f5a: add    %eax,%r9d
  8.82%  ││    0x00007fbb6c154f5d: add    %r9d,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         ││                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@86 (line 45)
         ││                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  8.92%  ││    0x00007fbb6c154f60: add    $0x8,%ebx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@88 (line 44)
         ││                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         ││    0x00007fbb6c154f63: cmp    %r10d,%ebx
         │╰    0x00007fbb6c154f66: jl     0x00007fbb6c154f10  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │                                                   ; - com.openkappa.runtime.fission.XorCount::fissured@71 (line 44)
         │                                                   ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │     0x00007fbb6c154f68: mov    %r14,%r9
         │     0x00007fbb6c154f6b: vmovq  %xmm0,%r13
  0.04%  │     0x00007fbb6c154f70: vmovq  %xmm1,%rbp
         │     0x00007fbb6c154f75: cmp    0x14(%rsp),%ebx
         │ ╭   0x00007fbb6c154f79: jge    0x00007fbb6c154f8e
         │ │   0x00007fbb6c154f7b: nop                       ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@74 (line 44)
         │ │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │ │↗  0x00007fbb6c154f7c: popcnt 0x10(%r11,%rbx,8),%r8
  0.55%  │ ││  0x00007fbb6c154f83: add    %r8d,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@86 (line 45)
         │ ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.47%  │ ││  0x00007fbb6c154f86: inc    %ebx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@88 (line 44)
         │ ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │ ││  0x00007fbb6c154f88: cmp    0x14(%rsp),%ebx
         │ │╰  0x00007fbb6c154f8c: jl     0x00007fbb6c154f7c  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@71 (line 44)
         │ │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │ ↘   0x00007fbb6c154f8e: mov    %r13,0x60(%rsp)
         │     0x00007fbb6c154f93: mov    %r9,0x70(%rsp)
  0.08%  │     0x00007fbb6c154f98: mov    0x8(%rsp),%rsi
         │     0x00007fbb6c154f9d: data16 xchg %ax,%ax
         │     0x00007fbb6c154fa0: vzeroupper 
  0.08%  │     0x00007fbb6c154fa3: callq  0x00007fbb64694b00  ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [8]=Oop }
         │                                                   ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                   ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@20 (line 232)
         │                                                   ;   {optimized virtual_call}
         │     0x00007fbb6c154fa8: mov    0x60(%rsp),%r13
  0.04%  │     0x00007fbb6c154fad: movzbl 0x94(%r13),%r10d   ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │                                                   ; - com.openkappa.runtime.fission.XorCount::fissured@54 (line 41)
         │                                                   ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │     0x00007fbb6c154fb5: mov    0x108(%r15),%r11
         │     0x00007fbb6c154fbc: add    $0x1,%rbp          ; ImmutableOopMap{r13=Oop [104]=Oop [112]=Oop [8]=Oop }
         │                                                   ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                   ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@33 (line 234)
  0.08%  │     0x00007fbb6c154fc0: test   %eax,(%r11)        ;   {poll}
         │     0x00007fbb6c154fc3: test   %r10d,%r10d
         │     0x00007fbb6c154fc6: jne    0x00007fbb6c155217  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                   ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@36 (line 235)
  0.02%  ↘     0x00007fbb6c154fcc: mov    0x70(%rsp),%r9
               0x00007fbb6c154fd1: mov    0x10(%r9),%r10d    ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
                                                             ; - com.openkappa.runtime.fission.XorCount::fissured@6 (line 41)
                                                             ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
               0x00007fbb6c154fd5: mov    0xc(%r12,%r10,8),%r8d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                             ; - com.openkappa.runtime.fission.XorCount::fissured@9 (line 41)
                                                             ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
                                                             ; implicit exception: dispatches to 0x00007fbb6c155390
  0.08%        0x00007fbb6c154fda: mov    %r8d,0x14(%rsp)
  0.21%        0x00007fbb6c154fdf: mov    0x14(%r9),%ebx     ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
                                                             ; - com.openkappa.runtime.fission.XorCount::fissured@20 (line 41)
                                                             ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
               0x00007fbb6c154fe3: mov    0xc(%r12,%rbx,8),%edx  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                             ; - com.openkappa.runtime.fission.XorCount::fissured@23 (line 41)
                                                             ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
                                                             ; implicit exception: dispatches to 0x00007fbb6c155390
  0.02%        0x00007fbb6c154fe8: lea    (%r12,%r10,8),%r11
               0x00007fbb6c154fec: test   %edx,%edx
               0x00007fbb6c154fee: jbe    0x00007fbb6c1551b5  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                             ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
                                                             ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
               0x00007fbb6c154ff4: mov    $0x1,%r8d
               0x00007fbb6c154ffa: cmp    %edx,%r8d
               0x00007fbb6c154ffd: cmovg  %edx,%r8d
....................................................................................................
 69.57%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 462 (482 bytes) 

                                                                   ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
                                                                   ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
                     0x00007fbb6c154ff4: mov    $0x1,%r8d
                     0x00007fbb6c154ffa: cmp    %edx,%r8d
                     0x00007fbb6c154ffd: cmovg  %edx,%r8d
                     0x00007fbb6c155001: mov    %r11d,%ecx
                     0x00007fbb6c155004: shr    $0x3,%ecx
                     0x00007fbb6c155007: and    $0x3,%ecx
                     0x00007fbb6c15500a: add    %r8d,%ecx
                     0x00007fbb6c15500d: mov    $0x2,%edi
  0.13%              0x00007fbb6c155012: sub    %ecx,%edi
                     0x00007fbb6c155014: and    $0x3,%edi
  0.06%              0x00007fbb6c155017: add    %r8d,%edi
                     0x00007fbb6c15501a: cmp    %edx,%edi
  0.08%              0x00007fbb6c15501c: cmovg  %edx,%edi
  0.06%              0x00007fbb6c15501f: lea    (%r12,%rbx,8),%rax
                     0x00007fbb6c155023: xor    %ecx,%ecx          ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                   ; - com.openkappa.runtime.fission.XorCount::fissured@48 (line 42)
                                                                   ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.04%   ↗          0x00007fbb6c155025: cmp    0x14(%rsp),%ecx
         ╭│          0x00007fbb6c155029: jge    0x00007fbb6c1551b5  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                        ; - com.openkappa.runtime.fission.XorCount::fissured@33 (line 41)
         ││                                                        ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.06%  ││          0x00007fbb6c15502f: cmp    0x14(%rsp),%ecx
         ││          0x00007fbb6c155033: jae    0x00007fbb6c15524f
  0.06%  ││          0x00007fbb6c155039: mov    0x10(%r11,%rcx,8),%r8  ;*laload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                        ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
         ││                                                        ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         ││          0x00007fbb6c15503e: cmp    %edx,%ecx
  0.04%  ││          0x00007fbb6c155040: jae    0x00007fbb6c155274
  0.08%  ││          0x00007fbb6c155046: xor    0x10(%rax,%rcx,8),%r8
  0.11%  ││          0x00007fbb6c15504b: mov    %r8,0x10(%r11,%rcx,8)  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                        ; - com.openkappa.runtime.fission.XorCount::fissured@4 (line 41)
         ││                                                        ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.04%  ││          0x00007fbb6c155050: inc    %ecx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││                                                        ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
         ││                                                        ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.04%  ││          0x00007fbb6c155052: cmp    %edi,%ecx
         │╰          0x00007fbb6c155054: jl     0x00007fbb6c155025  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │                                                         ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
         │                                                         ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │           0x00007fbb6c155056: mov    0x14(%rsp),%r8d
         │           0x00007fbb6c15505b: cmp    %edx,%r8d
         │           0x00007fbb6c15505e: mov    %r8d,%edi
         │           0x00007fbb6c155061: cmovg  %edx,%edi
  0.04%  │           0x00007fbb6c155064: mov    %edi,%esi
         │           0x00007fbb6c155066: add    $0xffffffe1,%esi
         │           0x00007fbb6c155069: cmp    %esi,%edi
  0.04%  │           0x00007fbb6c15506b: mov    $0x80000000,%r8d
         │           0x00007fbb6c155071: cmovl  %r8d,%esi
         │           0x00007fbb6c155075: cmp    %esi,%ecx
         │ ╭         0x00007fbb6c155077: jge    0x00007fbb6c155184
         │ │         0x00007fbb6c15507d: data16 xchg %ax,%ax       ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                       ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
         │ │                                                       ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  2.02%  │ │↗        0x00007fbb6c155080: vmovdqu 0x10(%rax,%rcx,8),%ymm0
         │ ││        0x00007fbb6c155086: vpxor  0x10(%r11,%rcx,8),%ymm0,%ymm0
  0.17%  │ ││        0x00007fbb6c15508d: vmovdqu %ymm0,0x10(%r11,%rcx,8)
  1.66%  │ ││        0x00007fbb6c155094: vmovdqu 0x30(%rax,%rcx,8),%ymm0
  0.02%  │ ││        0x00007fbb6c15509a: vpxor  0x30(%r11,%rcx,8),%ymm0,%ymm0
  2.08%  │ ││        0x00007fbb6c1550a1: vmovdqu %ymm0,0x30(%r11,%rcx,8)
  0.72%  │ ││        0x00007fbb6c1550a8: vmovdqu 0x50(%rax,%rcx,8),%ymm0
         │ ││        0x00007fbb6c1550ae: vpxor  0x50(%r11,%rcx,8),%ymm0,%ymm0
  1.64%  │ ││        0x00007fbb6c1550b5: vmovdqu %ymm0,0x50(%r11,%rcx,8)
  0.79%  │ ││        0x00007fbb6c1550bc: vmovdqu 0x70(%rax,%rcx,8),%ymm0
         │ ││        0x00007fbb6c1550c2: vpxor  0x70(%r11,%rcx,8),%ymm0,%ymm0
  3.02%  │ ││        0x00007fbb6c1550c9: vmovdqu %ymm0,0x70(%r11,%rcx,8)
  0.36%  │ ││        0x00007fbb6c1550d0: vmovdqu 0x90(%rax,%rcx,8),%ymm0
  0.02%  │ ││        0x00007fbb6c1550d9: vpxor  0x90(%r11,%rcx,8),%ymm0,%ymm0
  1.85%  │ ││        0x00007fbb6c1550e3: vmovdqu %ymm0,0x90(%r11,%rcx,8)
  0.34%  │ ││        0x00007fbb6c1550ed: vmovdqu 0xb0(%rax,%rcx,8),%ymm0
  0.02%  │ ││        0x00007fbb6c1550f6: vpxor  0xb0(%r11,%rcx,8),%ymm0,%ymm0
  3.93%  │ ││        0x00007fbb6c155100: vmovdqu %ymm0,0xb0(%r11,%rcx,8)
  0.13%  │ ││        0x00007fbb6c15510a: vmovdqu 0xd0(%rax,%rcx,8),%ymm0
         │ ││        0x00007fbb6c155113: vpxor  0xd0(%r11,%rcx,8),%ymm0,%ymm0
  2.04%  │ ││        0x00007fbb6c15511d: vmovdqu %ymm0,0xd0(%r11,%rcx,8)
  0.17%  │ ││        0x00007fbb6c155127: vmovdqu 0xf0(%rax,%rcx,8),%ymm0
  0.02%  │ ││        0x00007fbb6c155130: vpxor  0xf0(%r11,%rcx,8),%ymm0,%ymm0
  3.46%  │ ││        0x00007fbb6c15513a: vmovdqu %ymm0,0xf0(%r11,%rcx,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                      ; - com.openkappa.runtime.fission.XorCount::fissured@50 (line 42)
         │ ││                                                      ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.21%  │ ││        0x00007fbb6c155144: add    $0x20,%ecx         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                      ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
         │ ││                                                      ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │ ││        0x00007fbb6c155147: cmp    %esi,%ecx
         │ │╰        0x00007fbb6c155149: jl     0x00007fbb6c155080  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                       ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
         │ │                                                       ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.06%  │ │         0x00007fbb6c15514f: mov    %edi,%r8d
         │ │         0x00007fbb6c155152: add    $0xfffffffd,%r8d
         │ │         0x00007fbb6c155156: cmp    %r8d,%edi
         │ │         0x00007fbb6c155159: mov    $0x80000000,%esi
  0.02%  │ │         0x00007fbb6c15515e: cmovl  %esi,%r8d
         │ │         0x00007fbb6c155162: cmp    %r8d,%ecx
         │ │ ╭       0x00007fbb6c155165: jge    0x00007fbb6c155184
         │ │ │       0x00007fbb6c155167: nop                       ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │ │ │                                                     ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
         │ │ │                                                     ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │ │ │↗      0x00007fbb6c155168: vmovdqu 0x10(%rax,%rcx,8),%ymm0
  0.30%  │ │ ││      0x00007fbb6c15516e: vpxor  0x10(%r11,%rcx,8),%ymm0,%ymm0
  0.15%  │ │ ││      0x00007fbb6c155175: vmovdqu %ymm0,0x10(%r11,%rcx,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
         │ │ ││                                                    ; - com.openkappa.runtime.fission.XorCount::fissured@50 (line 42)
         │ │ ││                                                    ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.02%  │ │ ││      0x00007fbb6c15517c: add    $0x4,%ecx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │ │ ││                                                    ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
         │ │ ││                                                    ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.30%  │ │ ││      0x00007fbb6c15517f: cmp    %r8d,%ecx
         │ │ │╰      0x00007fbb6c155182: jl     0x00007fbb6c155168  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │ │ │                                                     ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
         │ │ │                                                     ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │ ↘ ↘       0x00007fbb6c155184: cmp    %edx,%ecx
         │     ╭     0x00007fbb6c155186: jge    0x00007fbb6c1551b5  ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │     │                                                   ; - com.openkappa.runtime.fission.XorCount::fissured@48 (line 42)
         │     │                                                   ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │     │ ↗   0x00007fbb6c155188: cmp    0x14(%rsp),%ecx
         │     │╭│   0x00007fbb6c15518c: jge    0x00007fbb6c1551b5  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │     │││                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@33 (line 41)
         │     │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.02%  │     │││   0x00007fbb6c15518e: cmp    0x14(%rsp),%ecx
         │     │││   0x00007fbb6c155192: jae    0x00007fbb6c15524f
  0.02%  │     │││   0x00007fbb6c155198: mov    0x10(%r11,%rcx,8),%r8  ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │     │││                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
         │     │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │     │││   0x00007fbb6c15519d: cmp    %edx,%ecx
         │     │││   0x00007fbb6c15519f: jae    0x00007fbb6c155274
         │     │││   0x00007fbb6c1551a5: xor    0x10(%rax,%rcx,8),%r8
         │     │││   0x00007fbb6c1551aa: mov    %r8,0x10(%r11,%rcx,8)  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
         │     │││                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@4 (line 41)
         │     │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │     │││   0x00007fbb6c1551af: inc    %ecx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │     │││                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
         │     │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │     │││   0x00007fbb6c1551b1: cmp    %edx,%ecx
         │     ││╰   0x00007fbb6c1551b3: jl     0x00007fbb6c155188  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │     ││                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@33 (line 41)
         │     ││                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.02%  ↘     ↘↘    0x00007fbb6c1551b5: mov    0x14(%rsp),%r8d
  0.02%              0x00007fbb6c1551ba: test   %r8d,%r8d
                  ╭  0x00007fbb6c1551bd: jbe    0x00007fbb6c15520b  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                  │                                                ; - com.openkappa.runtime.fission.XorCount::fissured@71 (line 44)
                  │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.11%           │  0x00007fbb6c1551bf: dec    %r8d
                  │  0x00007fbb6c1551c2: cmp    0x14(%rsp),%r8d
                  │  0x00007fbb6c1551c7: jae    0x00007fbb6c1552a4
                  │  0x00007fbb6c1551cd: popcnt 0x10(%r12,%r10,8),%rcx  ;*invokestatic bitCount {reexecute=0 rethrow=0 return_oop=0}
                  │                                                ; - com.openkappa.runtime.fission.XorCount::fissured@83 (line 45)
                  │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
                  │  0x00007fbb6c1551d4: mov    0x14(%rsp),%r10d
  0.08%           │  0x00007fbb6c1551d9: add    $0xfffffff9,%r10d
                  │  0x00007fbb6c1551dd: cmp    %r10d,%r8d
  0.02%           │  0x00007fbb6c1551e0: mov    $0x80000000,%r8d
                  │  0x00007fbb6c1551e6: cmovl  %r8d,%r10d
  0.02%           │  0x00007fbb6c1551ea: cmp    $0x1,%r10d
                  │  0x00007fbb6c1551ee: jle    0x00007fbb6c1552c0
  0.02%           │  0x00007fbb6c1551f4: mov    $0x1,%ebx
                  │  0x00007fbb6c1551f9: mov    %r9,%r14
                  │  0x00007fbb6c1551fc: vmovq  %r13,%xmm0
                  │  0x00007fbb6c155201: vmovq  %rbp,%xmm1
                  │  0x00007fbb6c155206: jmpq   0x00007fbb6c154f12
                  ↘  0x00007fbb6c15520b: xor    %edx,%edx
                     0x00007fbb6c15520d: jmpq   0x00007fbb6c154f8e
                     0x00007fbb6c155212: mov    $0x1,%ebp          ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                   ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@36 (line 235)
                     0x00007fbb6c155217: vzeroupper 
                     0x00007fbb6c15521a: movabs $0x7fbb8275ecb0,%r10
....................................................................................................
 26.77%  <total for region 2>

....[Hottest Regions]...............................................................................
 69.57%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 462 (216 bytes) 
 26.77%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 462 (482 bytes) 
  0.64%   [kernel.kallsyms]  do_syscall_64 (3 bytes) 
  0.30%   [kernel.kallsyms]  native_write_msr (0 bytes) 
  0.25%   [kernel.kallsyms]  entry_SYSCALL_64 (41 bytes) 
  0.19%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 411 (42 bytes) 
  0.17%   [kernel.kallsyms]  syscall_return_via_sysret (1 bytes) 
  0.06%   [kernel.kallsyms]  __x64_sys_gettid (6 bytes) 
  0.04%   [kernel.kallsyms]  do_syscall_64 (1 bytes) 
  0.04%   [kernel.kallsyms]  psi_task_change (0 bytes) 
  0.04%   [kernel.kallsyms]  page_remove_rmap (0 bytes) 
  0.04%   [kernel.kallsyms]  page_remove_rmap (0 bytes) 
  0.04%   [kernel.kallsyms]  fput_many (0 bytes) 
  0.04%   [kernel.kallsyms]  common_file_perm (4 bytes) 
  0.04%   [kernel.kallsyms]  mutex_lock (24 bytes) 
  0.04%   [kernel.kallsyms]  _raw_spin_lock_irqsave (0 bytes) 
  0.04%        libc-2.27.so  _IO_default_xsputn (31 bytes) 
  0.02%   [kernel.kallsyms]  sched_clock (0 bytes) 
  0.02%   [kernel.kallsyms]  crc32c_pcl_intel_update (0 bytes) 
  0.02%   [kernel.kallsyms]  activate_task (0 bytes) 
  1.57%  <...other 74 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.35%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 462 
  0.68%   [kernel.kallsyms]  do_syscall_64 
  0.30%   [kernel.kallsyms]  native_write_msr 
  0.25%   [kernel.kallsyms]  entry_SYSCALL_64 
  0.19%   [kernel.kallsyms]  syscall_return_via_sysret 
  0.19%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 411 
  0.11%                      <unknown> 
  0.08%   [kernel.kallsyms]  page_remove_rmap 
  0.06%   [kernel.kallsyms]  __x64_sys_gettid 
  0.04%   [kernel.kallsyms]  mutex_lock 
  0.04%   [kernel.kallsyms]  common_file_perm 
  0.04%   [kernel.kallsyms]  fput_many 
  0.04%   [kernel.kallsyms]  _raw_spin_lock_irqsave 
  0.04%           libjvm.so  resource_allocate_bytes 
  0.04%   [kernel.kallsyms]  psi_task_change 
  0.04%        libc-2.27.so  _IO_default_xsputn 
  0.04%           libjvm.so  defaultStream::hold 
  0.04%   [kernel.kallsyms]  futex_wake 
  0.04%           libjvm.so  IntervalWalker::walk_to 
  0.04%           libjvm.so  xmlStream::write_text 
  1.30%  <...other 61 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.54%         c2, level 4
  2.44%   [kernel.kallsyms]
  0.59%           libjvm.so
  0.25%        libc-2.27.so
  0.11%                    
  0.02%          ld-2.27.so
  0.02%         interpreter
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9-Ubuntu-0ubuntu2.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.openkappa.runtime.fission.XorCount.fissured
# Parameters: (size = 2048)

# Run progress: 30.00% complete, ETA 00:01:53
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1381.338 ns/op
# Warmup Iteration   2: 1331.346 ns/op
# Warmup Iteration   3: 1240.880 ns/op
# Warmup Iteration   4: 1163.462 ns/op
# Warmup Iteration   5: 1157.255 ns/op
Iteration   1: 1168.182 ns/op
Iteration   2: 1188.817 ns/op
Iteration   3: 1152.926 ns/op
Iteration   4: 1152.707 ns/op
Iteration   5: 1386.656 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.runtime.fission.XorCount.fissured":
  1209.858 ±(99.9%) 384.798 ns/op [Average]
  (min, avg, max) = (1152.707, 1209.858, 1386.656), stdev = 99.931
  CI (99.9%): [825.060, 1594.656] (assumes normal distribution)

Secondary result "com.openkappa.runtime.fission.XorCount.fissured:·asm":
PrintAssembly processed: 77465 total address lines.
Perf output processed (skipped 8.877 seconds):
 Column 1: cycles (4654 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 467 (632 bytes) 

                                                                  ;   {optimized virtual_call}
                    0x00007f9b0035cdf0: mov    0x60(%rsp),%r13
                    0x00007f9b0035cdf5: movzbl 0x94(%r13),%r11d   ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@30 (line 234)
                                                                  ; implicit exception: dispatches to 0x00007f9b0035d2e8
                    0x00007f9b0035cdfd: test   %r11d,%r11d
                    0x00007f9b0035ce00: jne    0x00007f9b0035d112  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@33 (line 234)
                    0x00007f9b0035ce06: mov    $0x1,%ebp
         ╭          0x00007f9b0035ce0b: jmpq   0x00007f9b0035cec8
  0.04%  │↗         0x00007f9b0035ce10: mov    %edx,%ecx          ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                       ; - com.openkappa.runtime.fission.XorCount::fissured@74 (line 44)
         ││                                                       ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         ││         0x00007f9b0035ce12: popcnt 0x28(%r10,%rax,8),%rsi
 11.73%  ││         0x00007f9b0035ce19: popcnt 0x20(%r10,%rax,8),%r11
  0.04%  ││         0x00007f9b0035ce20: popcnt 0x48(%r10,%rax,8),%rdx
 11.67%  ││         0x00007f9b0035ce27: popcnt 0x40(%r10,%rax,8),%r9
         ││         0x00007f9b0035ce2e: popcnt 0x38(%r10,%rax,8),%r8
  0.04%  ││         0x00007f9b0035ce35: popcnt 0x30(%r10,%rax,8),%rbx
  0.02%  ││         0x00007f9b0035ce3c: popcnt 0x18(%r10,%rax,8),%r13
  8.79%  ││         0x00007f9b0035ce43: popcnt 0x10(%r10,%rax,8),%rbp
         ││         0x00007f9b0035ce4a: add    %ecx,%ebp
  0.06%  ││         0x00007f9b0035ce4c: add    %ebp,%r13d
  0.06%  ││         0x00007f9b0035ce4f: add    %r11d,%r13d
  7.43%  ││         0x00007f9b0035ce52: add    %esi,%r13d
  0.02%  ││         0x00007f9b0035ce55: add    %r13d,%ebx
         ││         0x00007f9b0035ce58: add    %ebx,%r8d
  8.44%  ││         0x00007f9b0035ce5b: add    %r8d,%r9d
  7.54%  ││         0x00007f9b0035ce5e: add    %r9d,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         ││                                                       ; - com.openkappa.runtime.fission.XorCount::fissured@86 (line 45)
         ││                                                       ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  7.89%  ││         0x00007f9b0035ce61: add    $0x8,%eax          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││                                                       ; - com.openkappa.runtime.fission.XorCount::fissured@88 (line 44)
         ││                                                       ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         ││         0x00007f9b0035ce64: cmp    %edi,%eax
         │╰         0x00007f9b0035ce66: jl     0x00007f9b0035ce10  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │                                                        ; - com.openkappa.runtime.fission.XorCount::fissured@71 (line 44)
         │                                                        ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │          0x00007f9b0035ce68: vmovq  %xmm0,%rbx
         │          0x00007f9b0035ce6d: vmovq  %xmm1,%r13
  0.04%  │          0x00007f9b0035ce72: vmovq  %xmm2,%rbp
         │          0x00007f9b0035ce77: cmp    %r14d,%eax
         │ ╭        0x00007f9b0035ce7a: jge    0x00007f9b0035ce8d  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                      ; - com.openkappa.runtime.fission.XorCount::fissured@74 (line 44)
         │ │                                                      ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │ │↗       0x00007f9b0035ce7c: popcnt 0x10(%r10,%rax,8),%r8
  0.34%  │ ││       0x00007f9b0035ce83: add    %r8d,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                     ; - com.openkappa.runtime.fission.XorCount::fissured@86 (line 45)
         │ ││                                                     ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.15%  │ ││       0x00007f9b0035ce86: inc    %eax               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                     ; - com.openkappa.runtime.fission.XorCount::fissured@88 (line 44)
         │ ││                                                     ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │ ││       0x00007f9b0035ce88: cmp    %r14d,%eax
         │ │╰       0x00007f9b0035ce8b: jl     0x00007f9b0035ce7c  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                      ; - com.openkappa.runtime.fission.XorCount::fissured@71 (line 44)
         │ │                                                      ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │ ↘        0x00007f9b0035ce8d: mov    %r13,0x60(%rsp)
         │          0x00007f9b0035ce92: mov    %rbx,0x70(%rsp)
  0.06%  │          0x00007f9b0035ce97: mov    0x8(%rsp),%rsi
  0.11%  │          0x00007f9b0035ce9c: vzeroupper 
  0.02%  │          0x00007f9b0035ce9f: callq  0x00007f9af889cb00  ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [8]=Oop }
         │                                                        ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                        ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@20 (line 232)
         │                                                        ;   {optimized virtual_call}
         │          0x00007f9b0035cea4: mov    0x60(%rsp),%r13
         │          0x00007f9b0035cea9: movzbl 0x94(%r13),%r10d   ;*goto {reexecute=0 rethrow=0 return_oop=0}
         │                                                        ; - com.openkappa.runtime.fission.XorCount::fissured@54 (line 41)
         │                                                        ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.04%  │          0x00007f9b0035ceb1: mov    0x108(%r15),%r11
         │          0x00007f9b0035ceb8: add    $0x1,%rbp          ; ImmutableOopMap{r13=Oop [104]=Oop [112]=Oop [8]=Oop }
         │                                                        ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                        ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@33 (line 234)
         │          0x00007f9b0035cebc: test   %eax,(%r11)        ;   {poll}
         │          0x00007f9b0035cebf: test   %r10d,%r10d
         │          0x00007f9b0035cec2: jne    0x00007f9b0035d117  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                        ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@36 (line 235)
  0.04%  ↘          0x00007f9b0035cec8: mov    0x70(%rsp),%rbx
                    0x00007f9b0035cecd: mov    0x10(%rbx),%ecx    ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
                                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@6 (line 41)
                                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
                    0x00007f9b0035ced0: mov    0xc(%r12,%rcx,8),%r14d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@9 (line 41)
                                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
                                                                  ; implicit exception: dispatches to 0x00007f9b0035d289
  0.02%             0x00007f9b0035ced5: mov    0x14(%rbx),%eax    ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
                                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@20 (line 41)
                                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
                    0x00007f9b0035ced8: mov    0xc(%r12,%rax,8),%edx  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@23 (line 41)
                                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
                                                                  ; implicit exception: dispatches to 0x00007f9b0035d289
                    0x00007f9b0035cedd: lea    (%r12,%rcx,8),%r10
                    0x00007f9b0035cee1: test   %edx,%edx
                    0x00007f9b0035cee3: jbe    0x00007f9b0035d0bb  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
                                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.04%             0x00007f9b0035cee9: mov    $0x1,%r8d
                    0x00007f9b0035ceef: cmp    %edx,%r8d
                    0x00007f9b0035cef2: mov    $0x1,%edi
                    0x00007f9b0035cef7: cmovg  %edx,%edi
  0.06%             0x00007f9b0035cefa: mov    %r10d,%r8d
  0.02%             0x00007f9b0035cefd: shr    $0x3,%r8d
                    0x00007f9b0035cf01: and    $0x3,%r8d
                    0x00007f9b0035cf05: add    %edi,%r8d
  0.02%             0x00007f9b0035cf08: mov    $0x2,%esi
  0.04%             0x00007f9b0035cf0d: sub    %r8d,%esi
                    0x00007f9b0035cf10: and    $0x3,%esi
                    0x00007f9b0035cf13: add    %edi,%esi
  0.02%             0x00007f9b0035cf15: cmp    %edx,%esi
                    0x00007f9b0035cf17: cmovg  %edx,%esi
  0.02%             0x00007f9b0035cf1a: lea    (%r12,%rax,8),%r9
                    0x00007f9b0035cf1e: xor    %edi,%edi          ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@48 (line 42)
                                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
             ↗      0x00007f9b0035cf20: cmp    %r14d,%edi
             │      0x00007f9b0035cf23: jge    0x00007f9b0035d0bb  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
             │                                                    ; - com.openkappa.runtime.fission.XorCount::fissured@33 (line 41)
             │                                                    ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
             │      0x00007f9b0035cf29: cmp    %r14d,%edi
             │      0x00007f9b0035cf2c: jae    0x00007f9b0035d14f
  0.11%      │      0x00007f9b0035cf32: mov    0x10(%r10,%rdi,8),%r11  ;*laload {reexecute=0 rethrow=0 return_oop=0}
             │                                                    ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
             │                                                    ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
             │      0x00007f9b0035cf37: cmp    %edx,%edi
             │      0x00007f9b0035cf39: jae    0x00007f9b0035d174
             │      0x00007f9b0035cf3f: xor    0x10(%r9,%rdi,8),%r11
             │      0x00007f9b0035cf44: mov    %r11,0x10(%r10,%rdi,8)  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
             │                                                    ; - com.openkappa.runtime.fission.XorCount::fissured@4 (line 41)
             │                                                    ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.06%      │      0x00007f9b0035cf49: inc    %edi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
             │                                                    ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
             │                                                    ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
             │      0x00007f9b0035cf4b: cmp    %esi,%edi
             ╰      0x00007f9b0035cf4d: jl     0x00007f9b0035cf20  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
                                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
                    0x00007f9b0035cf4f: cmp    %edx,%r14d
                    0x00007f9b0035cf52: mov    %r14d,%r8d
  0.02%             0x00007f9b0035cf55: cmovg  %edx,%r8d
                    0x00007f9b0035cf59: mov    %r8d,%r11d
  0.04%             0x00007f9b0035cf5c: add    $0xffffffe1,%r11d
                    0x00007f9b0035cf60: cmp    %r11d,%r8d
  0.04%             0x00007f9b0035cf63: mov    $0x80000000,%esi
                    0x00007f9b0035cf68: cmovl  %esi,%r11d
                    0x00007f9b0035cf6c: cmp    %r11d,%edi
              ╭     0x00007f9b0035cf6f: jge    0x00007f9b0035d08c
  0.02%       │     0x00007f9b0035cf75: data16 data16 nopw 0x0(%rax,%rax,1)
              │                                                   ;*laload {reexecute=0 rethrow=0 return_oop=0}
              │                                                   ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
              │                                                   ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  1.85%       │↗    0x00007f9b0035cf80: vmovdqu 0x10(%r9,%rdi,8),%ymm0
  1.16%       ││    0x00007f9b0035cf87: vpxor  0x10(%r10,%rdi,8),%ymm0,%ymm0
  2.47%       ││    0x00007f9b0035cf8e: vmovdqu %ymm0,0x10(%r10,%rdi,8)
  0.77%       ││    0x00007f9b0035cf95: vmovdqu 0x30(%r9,%rdi,8),%ymm0
              ││    0x00007f9b0035cf9c: vpxor  0x30(%r10,%rdi,8),%ymm0,%ymm0
  1.53%       ││    0x00007f9b0035cfa3: vmovdqu %ymm0,0x30(%r10,%rdi,8)
  0.64%       ││    0x00007f9b0035cfaa: vmovdqu 0x50(%r9,%rdi,8),%ymm0
  1.03%       ││    0x00007f9b0035cfb1: vpxor  0x50(%r10,%rdi,8),%ymm0,%ymm0
  3.59%       ││    0x00007f9b0035cfb8: vmovdqu %ymm0,0x50(%r10,%rdi,8)
  0.56%       ││    0x00007f9b0035cfbf: vmovdqu 0x70(%r9,%rdi,8),%ymm0
  0.02%       ││    0x00007f9b0035cfc6: vpxor  0x70(%r10,%rdi,8),%ymm0,%ymm0
  1.53%       ││    0x00007f9b0035cfcd: vmovdqu %ymm0,0x70(%r10,%rdi,8)
  0.47%       ││    0x00007f9b0035cfd4: vmovdqu 0x90(%r9,%rdi,8),%ymm0
  0.39%       ││    0x00007f9b0035cfde: vpxor  0x90(%r10,%rdi,8),%ymm0,%ymm0
  3.07%       ││    0x00007f9b0035cfe8: vmovdqu %ymm0,0x90(%r10,%rdi,8)
  0.54%       ││    0x00007f9b0035cff2: vmovdqu 0xb0(%r9,%rdi,8),%ymm0
              ││    0x00007f9b0035cffc: vpxor  0xb0(%r10,%rdi,8),%ymm0,%ymm0
  1.76%       ││    0x00007f9b0035d006: vmovdqu %ymm0,0xb0(%r10,%rdi,8)
  0.43%       ││    0x00007f9b0035d010: vmovdqu 0xd0(%r9,%rdi,8),%ymm0
  0.69%       ││    0x00007f9b0035d01a: vpxor  0xd0(%r10,%rdi,8),%ymm0,%ymm0
  2.84%       ││    0x00007f9b0035d024: vmovdqu %ymm0,0xd0(%r10,%rdi,8)
  0.30%       ││    0x00007f9b0035d02e: vmovdqu 0xf0(%r9,%rdi,8),%ymm0
              ││    0x00007f9b0035d038: vpxor  0xf0(%r10,%rdi,8),%ymm0,%ymm0
  2.13%       ││    0x00007f9b0035d042: vmovdqu %ymm0,0xf0(%r10,%rdi,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
              ││                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@50 (line 42)
              ││                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.32%       ││    0x00007f9b0035d04c: add    $0x20,%edi         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
              ││                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
              ││                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
              ││    0x00007f9b0035d04f: cmp    %r11d,%edi
              │╰    0x00007f9b0035d052: jl     0x00007f9b0035cf80  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
              │                                                   ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
              │                                                   ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.04%       │     0x00007f9b0035d058: mov    %r8d,%esi
              │     0x00007f9b0035d05b: add    $0xfffffffd,%esi
  0.02%       │     0x00007f9b0035d05e: cmp    %esi,%r8d
              │     0x00007f9b0035d061: mov    $0x80000000,%r8d
  0.04%       │     0x00007f9b0035d067: cmovl  %r8d,%esi
              │     0x00007f9b0035d06b: cmp    %esi,%edi
              │ ╭   0x00007f9b0035d06d: jge    0x00007f9b0035d08c
              │ │   0x00007f9b0035d06f: nop                       ;*laload {reexecute=0 rethrow=0 return_oop=0}
              │ │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
              │ │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
              │ │↗  0x00007f9b0035d070: vmovdqu 0x10(%r9,%rdi,8),%ymm0
  0.11%       │ ││  0x00007f9b0035d077: vpxor  0x10(%r10,%rdi,8),%ymm0,%ymm0
  0.06%       │ ││  0x00007f9b0035d07e: vmovdqu %ymm0,0x10(%r10,%rdi,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
              │ ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@50 (line 42)
              │ ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
              │ ││  0x00007f9b0035d085: add    $0x4,%edi          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
              │ ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
              │ ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.13%       │ ││  0x00007f9b0035d088: cmp    %esi,%edi
              │ │╰  0x00007f9b0035d08a: jl     0x00007f9b0035d070  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
              │ │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
              │ │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
              ↘ ↘   0x00007f9b0035d08c: cmp    %edx,%edi
                    0x00007f9b0035d08e: jge    0x00007f9b0035d0bb  ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@48 (line 42)
                                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
                    0x00007f9b0035d090: cmp    %r14d,%edi
....................................................................................................
 93.66%  <total for region 1>

....[Hottest Regions]...............................................................................
 93.66%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 467 (632 bytes) 
  0.95%   [kernel.kallsyms]  do_syscall_64 (1 bytes) 
  0.58%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 417 (37 bytes) 
  0.47%   [kernel.kallsyms]  entry_SYSCALL_64 (41 bytes) 
  0.34%   [kernel.kallsyms]  native_write_msr (6 bytes) 
  0.26%   [kernel.kallsyms]  syscall_return_via_sysret (0 bytes) 
  0.19%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 467 (76 bytes) 
  0.09%   [kernel.kallsyms]  native_sched_clock (7 bytes) 
  0.09%        libc-2.27.so  __GI___libc_write (16 bytes) 
  0.06%   [kernel.kallsyms]  __fget (40 bytes) 
  0.06%   [kernel.kallsyms]  copy_user_generic_unrolled (37 bytes) 
  0.06%   [kernel.kallsyms]  mutex_unlock (0 bytes) 
  0.06%   [kernel.kallsyms]  mutex_lock (0 bytes) 
  0.06%      hsdis-amd64.so  print_insn (23 bytes) 
  0.04%   [kernel.kallsyms]  crc32c_pcl_intel_update (6 bytes) 
  0.04%   [kernel.kallsyms]  activate_task (8 bytes) 
  0.04%   [kernel.kallsyms]  __wake_up_common_lock (21 bytes) 
  0.04%   [kernel.kallsyms]  __update_load_avg_cfs_rq (10 bytes) 
  0.04%   [kernel.kallsyms]  start_this_handle (8 bytes) 
  0.04%   [kernel.kallsyms]  jbd2_journal_stop (0 bytes) 
  2.77%  <...other 123 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 93.85%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 467 
  0.95%   [kernel.kallsyms]  do_syscall_64 
  0.58%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 417 
  0.47%   [kernel.kallsyms]  entry_SYSCALL_64 
  0.34%   [kernel.kallsyms]  native_write_msr 
  0.26%   [kernel.kallsyms]  syscall_return_via_sysret 
  0.13%      hsdis-amd64.so  print_insn 
  0.11%        libc-2.27.so  vfprintf 
  0.11%   [kernel.kallsyms]  native_sched_clock 
  0.09%        libc-2.27.so  __GI___libc_write 
  0.09%   [kernel.kallsyms]  psi_task_change 
  0.06%   [kernel.kallsyms]  mutex_lock 
  0.06%   [kernel.kallsyms]  mutex_unlock 
  0.06%   [kernel.kallsyms]  __fget 
  0.06%   [kernel.kallsyms]  activate_task 
  0.06%   [kernel.kallsyms]  copy_user_generic_unrolled 
  0.06%   [kernel.kallsyms]  start_this_handle 
  0.06%           libjvm.so  xmlStream::write_text 
  0.04%   [kernel.kallsyms]  __update_load_avg_cfs_rq 
  0.04%        libc-2.27.so  _IO_fflush 
  2.47%  <...other 100 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.43%         c2, level 4
  3.89%   [kernel.kallsyms]
  0.77%           libjvm.so
  0.54%        libc-2.27.so
  0.19%      hsdis-amd64.so
  0.13%         interpreter
  0.02%          ld-2.27.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9-Ubuntu-0ubuntu2.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.openkappa.runtime.fission.XorCount.fissured
# Parameters: (size = 4096)

# Run progress: 40.00% complete, ETA 00:01:36
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3447.770 ns/op
# Warmup Iteration   2: 3296.640 ns/op
# Warmup Iteration   3: 3020.384 ns/op
# Warmup Iteration   4: 2840.752 ns/op
# Warmup Iteration   5: 2824.842 ns/op
Iteration   1: 2878.081 ns/op
Iteration   2: 2917.533 ns/op
Iteration   3: 2810.187 ns/op
Iteration   4: 2809.447 ns/op
Iteration   5: 3385.806 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.runtime.fission.XorCount.fissured":
  2960.211 ±(99.9%) 933.205 ns/op [Average]
  (min, avg, max) = (2809.447, 2960.211, 3385.806), stdev = 242.350
  CI (99.9%): [2027.006, 3893.415] (assumes normal distribution)

Secondary result "com.openkappa.runtime.fission.XorCount.fissured:·asm":
PrintAssembly processed: 77124 total address lines.
Perf output processed (skipped 8.773 seconds):
 Column 1: cycles (4742 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 454 (124 bytes) 

                                                            ; implicit exception: dispatches to 0x00007f3d0035cd60
              0x00007f3d0035c891: test   %r10d,%r10d
              0x00007f3d0035c894: jne    0x00007f3d0035cb9a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@33 (line 234)
              0x00007f3d0035c89a: mov    $0x1,%ebp
              0x00007f3d0035c89f: jmpq   0x00007f3d0035c95c
         ↗    0x00007f3d0035c8a4: mov    %edx,%r10d         ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@74 (line 44)
         │                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │    0x00007f3d0035c8a7: popcnt 0x28(%r11,%r8,8),%rcx
 11.66%  │    0x00007f3d0035c8ae: popcnt 0x20(%r11,%r8,8),%r9
  0.02%  │    0x00007f3d0035c8b5: popcnt 0x48(%r11,%r8,8),%rdx
  8.94%  │    0x00007f3d0035c8bc: popcnt 0x40(%r11,%r8,8),%rsi
         │    0x00007f3d0035c8c3: popcnt 0x38(%r11,%r8,8),%rdi
         │    0x00007f3d0035c8ca: popcnt 0x30(%r11,%r8,8),%rbp
  0.11%  │    0x00007f3d0035c8d1: popcnt 0x18(%r11,%r8,8),%rax
  6.62%  │    0x00007f3d0035c8d8: popcnt 0x10(%r11,%r8,8),%r14
         │    0x00007f3d0035c8df: add    %r10d,%r14d
  0.08%  │    0x00007f3d0035c8e2: add    %r14d,%eax
  0.08%  │    0x00007f3d0035c8e5: add    %r9d,%eax
  6.24%  │    0x00007f3d0035c8e8: add    %ecx,%eax
  0.08%  │    0x00007f3d0035c8ea: add    %eax,%ebp
  0.25%  │    0x00007f3d0035c8ec: add    %ebp,%edi
  6.64%  │    0x00007f3d0035c8ee: add    %edi,%esi
  6.26%  │    0x00007f3d0035c8f0: add    %esi,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@86 (line 45)
         │                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  6.07%  │    0x00007f3d0035c8f2: add    $0x8,%r8d          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@88 (line 44)
         │                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.06%  │    0x00007f3d0035c8f6: cmp    %ebx,%r8d
         ╰    0x00007f3d0035c8f9: jl     0x00007f3d0035c8a4  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - com.openkappa.runtime.fission.XorCount::fissured@71 (line 44)
                                                            ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
              0x00007f3d0035c8fb: vmovq  %xmm0,%r9
              0x00007f3d0035c900: vmovq  %xmm1,%rbp
  0.02%       0x00007f3d0035c905: cmp    0x14(%rsp),%r8d
          ╭   0x00007f3d0035c90a: jge    0x00007f3d0035c920  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
          │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@74 (line 44)
          │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.13%   │↗  0x00007f3d0035c90c: popcnt 0x10(%r11,%r8,8),%r10
  0.06%   ││  0x00007f3d0035c913: add    %r10d,%edx         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
          ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@86 (line 45)
          ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.08%   ││  0x00007f3d0035c916: inc    %r8d               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@88 (line 44)
          ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
          ││  0x00007f3d0035c919: cmp    0x14(%rsp),%r8d
          │╰  0x00007f3d0035c91e: jl     0x00007f3d0035c90c  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@71 (line 44)
          │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
          ↘   0x00007f3d0035c920: mov    %r13,0x60(%rsp)
              0x00007f3d0035c925: mov    %r9,0x70(%rsp)
  0.02%       0x00007f3d0035c92a: mov    0x8(%rsp),%rsi
              0x00007f3d0035c92f: nop
              0x00007f3d0035c930: vzeroupper 
              0x00007f3d0035c933: callq  0x00007f3cf889cb00  ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [8]=Oop }
                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@20 (line 232)
                                                            ;   {optimized virtual_call}
              0x00007f3d0035c938: mov    0x60(%rsp),%r13
              0x00007f3d0035c93d: movzbl 0x94(%r13),%r11d   ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - com.openkappa.runtime.fission.XorCount::fissured@54 (line 41)
                                                            ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
....................................................................................................
 53.46%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 454 (312 bytes) 

                  0x00007f3d0035c9f3: cmovg  %ecx,%eax
                  0x00007f3d0035c9f6: mov    %eax,%r10d
                  0x00007f3d0035c9f9: add    $0xffffffe1,%r10d
                  0x00007f3d0035c9fd: cmp    %r10d,%eax
                  0x00007f3d0035ca00: mov    $0x80000000,%esi
                  0x00007f3d0035ca05: cmovl  %esi,%r10d
                  0x00007f3d0035ca09: cmp    %r10d,%edx
         ╭        0x00007f3d0035ca0c: jge    0x00007f3d0035cb13  ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │                                                      ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
         │                                                      ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  1.16%  │↗       0x00007f3d0035ca12: vmovdqu 0x10(%rdi,%rdx,8),%ymm0
         ││       0x00007f3d0035ca18: vpxor  0x10(%r11,%rdx,8),%ymm0,%ymm0
  0.70%  ││       0x00007f3d0035ca1f: vmovdqu %ymm0,0x10(%r11,%rdx,8)
  1.20%  ││       0x00007f3d0035ca26: vmovdqu 0x30(%rdi,%rdx,8),%ymm0
  2.80%  ││       0x00007f3d0035ca2c: vpxor  0x30(%r11,%rdx,8),%ymm0,%ymm0
  4.09%  ││       0x00007f3d0035ca33: vmovdqu %ymm0,0x30(%r11,%rdx,8)
  1.08%  ││       0x00007f3d0035ca3a: vmovdqu 0x50(%rdi,%rdx,8),%ymm0
  0.02%  ││       0x00007f3d0035ca40: vpxor  0x50(%r11,%rdx,8),%ymm0,%ymm0
  1.22%  ││       0x00007f3d0035ca47: vmovdqu %ymm0,0x50(%r11,%rdx,8)
  0.59%  ││       0x00007f3d0035ca4e: vmovdqu 0x70(%rdi,%rdx,8),%ymm0
  3.21%  ││       0x00007f3d0035ca54: vpxor  0x70(%r11,%rdx,8),%ymm0,%ymm0
  4.83%  ││       0x00007f3d0035ca5b: vmovdqu %ymm0,0x70(%r11,%rdx,8)
  0.72%  ││       0x00007f3d0035ca62: vmovdqu 0x90(%rdi,%rdx,8),%ymm0
  0.04%  ││       0x00007f3d0035ca6b: vpxor  0x90(%r11,%rdx,8),%ymm0,%ymm0
  1.46%  ││       0x00007f3d0035ca75: vmovdqu %ymm0,0x90(%r11,%rdx,8)
  0.44%  ││       0x00007f3d0035ca7f: vmovdqu 0xb0(%rdi,%rdx,8),%ymm0
  2.38%  ││       0x00007f3d0035ca88: vpxor  0xb0(%r11,%rdx,8),%ymm0,%ymm0
  4.15%  ││       0x00007f3d0035ca92: vmovdqu %ymm0,0xb0(%r11,%rdx,8)
  0.44%  ││       0x00007f3d0035ca9c: vmovdqu 0xd0(%rdi,%rdx,8),%ymm0
         ││       0x00007f3d0035caa5: vpxor  0xd0(%r11,%rdx,8),%ymm0,%ymm0
  1.64%  ││       0x00007f3d0035caaf: vmovdqu %ymm0,0xd0(%r11,%rdx,8)
  0.27%  ││       0x00007f3d0035cab9: vmovdqu 0xf0(%rdi,%rdx,8),%ymm0
  2.95%  ││       0x00007f3d0035cac2: vpxor  0xf0(%r11,%rdx,8),%ymm0,%ymm0
  5.19%  ││       0x00007f3d0035cacc: vmovdqu %ymm0,0xf0(%r11,%rdx,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
         ││                                                     ; - com.openkappa.runtime.fission.XorCount::fissured@50 (line 42)
         ││                                                     ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.32%  ││       0x00007f3d0035cad6: add    $0x20,%edx         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         ││                                                     ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
         ││                                                     ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         ││       0x00007f3d0035cad9: cmp    %r10d,%edx
         │╰       0x00007f3d0035cadc: jl     0x00007f3d0035ca12  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │                                                      ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
         │                                                      ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │        0x00007f3d0035cae2: mov    %eax,%esi
         │        0x00007f3d0035cae4: add    $0xfffffffd,%esi
  0.02%  │        0x00007f3d0035cae7: cmp    %esi,%eax
         │        0x00007f3d0035cae9: mov    $0x80000000,%r10d
         │        0x00007f3d0035caef: cmovl  %r10d,%esi
         │        0x00007f3d0035caf3: cmp    %esi,%edx
         │ ╭      0x00007f3d0035caf5: jge    0x00007f3d0035cb13
         │ │      0x00007f3d0035caf7: nop                       ;*laload {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                    ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
         │ │                                                    ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.04%  │ │↗     0x00007f3d0035caf8: vmovdqu 0x10(%rdi,%rdx,8),%ymm0
  0.04%  │ ││     0x00007f3d0035cafe: vpxor  0x10(%r11,%rdx,8),%ymm0,%ymm0
  0.08%  │ ││     0x00007f3d0035cb05: vmovdqu %ymm0,0x10(%r11,%rdx,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                   ; - com.openkappa.runtime.fission.XorCount::fissured@50 (line 42)
         │ ││                                                   ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.02%  │ ││     0x00007f3d0035cb0c: add    $0x4,%edx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │ ││                                                   ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
         │ ││                                                   ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         │ ││     0x00007f3d0035cb0f: cmp    %esi,%edx
         │ │╰     0x00007f3d0035cb11: jl     0x00007f3d0035caf8  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                    ; - com.openkappa.runtime.fission.XorCount::fissured@24 (line 41)
         │ │                                                    ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
         ↘ ↘      0x00007f3d0035cb13: cmp    %ecx,%edx
             ╭    0x00007f3d0035cb15: jge    0x00007f3d0035cb45
             │    0x00007f3d0035cb17: nop                       ;*laload {reexecute=0 rethrow=0 return_oop=0}
             │                                                  ; - com.openkappa.runtime.fission.XorCount::fissured@48 (line 42)
             │                                                  ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.02%      │ ↗  0x00007f3d0035cb18: cmp    0x14(%rsp),%edx
             │╭│  0x00007f3d0035cb1c: jge    0x00007f3d0035cb45  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
             │││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@33 (line 41)
             │││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.02%      │││  0x00007f3d0035cb1e: cmp    0x14(%rsp),%edx
             │││  0x00007f3d0035cb22: jae    0x00007f3d0035cbd7
             │││  0x00007f3d0035cb28: mov    0x10(%r11,%rdx,8),%rax  ;*laload {reexecute=0 rethrow=0 return_oop=0}
             │││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@42 (line 42)
             │││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
             │││  0x00007f3d0035cb2d: cmp    %ecx,%edx
             │││  0x00007f3d0035cb2f: jae    0x00007f3d0035cbfc
  0.04%      │││  0x00007f3d0035cb35: xor    0x10(%rdi,%rdx,8),%rax
             │││  0x00007f3d0035cb3a: mov    %rax,0x10(%r11,%rdx,8)  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
             │││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@4 (line 41)
             │││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.02%      │││  0x00007f3d0035cb3f: inc    %edx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
             │││                                                ; - com.openkappa.runtime.fission.XorCount::fissured@51 (line 41)
             │││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
             │││  0x00007f3d0035cb41: cmp    %ecx,%edx
             ││╰  0x00007f3d0035cb43: jl     0x00007f3d0035cb18  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
             ││                                                 ; - com.openkappa.runtime.fission.XorCount::fissured@33 (line 41)
             ││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
  0.02%      ↘↘   0x00007f3d0035cb45: mov    0x14(%rsp),%r10d
  0.02%           0x00007f3d0035cb4a: test   %r10d,%r10d
                  0x00007f3d0035cb4d: jbe    0x00007f3d0035cb93  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                ; - com.openkappa.runtime.fission.XorCount::fissured@71 (line 44)
                                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
                  0x00007f3d0035cb4f: mov    %r10d,%ecx
                  0x00007f3d0035cb52: dec    %ecx
                  0x00007f3d0035cb54: cmp    %r10d,%ecx
                  0x00007f3d0035cb57: jae    0x00007f3d0035cc2c
                  0x00007f3d0035cb5d: popcnt 0x10(%r12,%r8,8),%r10  ;*invokestatic bitCount {reexecute=0 rethrow=0 return_oop=0}
                                                                ; - com.openkappa.runtime.fission.XorCount::fissured@83 (line 45)
                                                                ; - com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub@17 (line 232)
....................................................................................................
 41.27%  <total for region 2>

....[Hottest Regions]...............................................................................
 53.46%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 454 (124 bytes) 
 41.27%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 454 (312 bytes) 
  1.05%   [kernel.kallsyms]  do_syscall_64 (0 bytes) 
  0.57%   [kernel.kallsyms]  entry_SYSCALL_64 (91 bytes) 
  0.30%   [kernel.kallsyms]  syscall_return_via_sysret (6 bytes) 
  0.23%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 454 (89 bytes) 
  0.11%   [kernel.kallsyms]  psi_task_change (30 bytes) 
  0.11%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 405 (20 bytes) 
  0.04%   [kernel.kallsyms]  __intel_pmu_disable_all (6 bytes) 
  0.04%   [kernel.kallsyms]  native_sched_clock (1 bytes) 
  0.04%   [kernel.kallsyms]  switch_fpu_return (0 bytes) 
  0.04%   [kernel.kallsyms]  native_write_msr (0 bytes) 
  0.04%   [kernel.kallsyms]  __fget_light (0 bytes) 
  0.04%   [kernel.kallsyms]  copy_user_generic_unrolled (0 bytes) 
  0.04%   [kernel.kallsyms]  _cond_resched (18 bytes) 
  0.04%   [kernel.kallsyms]  __lock_text_start (0 bytes) 
  0.04%   [kernel.kallsyms]  entry_SYSCALL_64_after_hwframe (0 bytes) 
  0.04%   [kernel.kallsyms]  entry_SYSCALL_64_after_hwframe (23 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (7 bytes) 
  0.04%           libjvm.so  fileStream::write (14 bytes) 
  2.38%  <...other 110 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.00%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fissured_jmhTest::fissured_avgt_jmhStub, version 454 
  1.10%   [kernel.kallsyms]  do_syscall_64 
  0.57%   [kernel.kallsyms]  entry_SYSCALL_64 
  0.30%   [kernel.kallsyms]  syscall_return_via_sysret 
  0.13%   [kernel.kallsyms]  psi_task_change 
  0.11%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 405 
  0.08%   [kernel.kallsyms]  native_sched_clock 
  0.08%      hsdis-amd64.so  print_insn 
  0.08%   [kernel.kallsyms]  entry_SYSCALL_64_after_hwframe 
  0.06%   [kernel.kallsyms]  __schedule 
  0.06%   [kernel.kallsyms]  __task_pid_nr_ns 
  0.06%           libjvm.so  fileStream::write 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.06%           libjvm.so  xmlStream::write_text 
  0.04%        libc-2.27.so  vfprintf 
  0.04%   [kernel.kallsyms]  update_load_avg 
  0.04%   [kernel.kallsyms]  _cond_resched 
  0.04%   [kernel.kallsyms]  update_cfs_group 
  0.04%   [kernel.kallsyms]  switch_fpu_return 
  0.04%        libc-2.27.so  __strchrnul_avx2 
  1.96%  <...other 83 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.11%         c2, level 4
  3.69%   [kernel.kallsyms]
  0.63%           libjvm.so
  0.27%        libc-2.27.so
  0.13%         interpreter
  0.11%      hsdis-amd64.so
  0.02%         c1, level 3
  0.02%         c1, level 2
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9-Ubuntu-0ubuntu2.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.openkappa.runtime.fission.XorCount.fused
# Parameters: (size = 256)

# Run progress: 50.00% complete, ETA 00:01:19
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 259.125 ns/op
# Warmup Iteration   2: 220.480 ns/op
# Warmup Iteration   3: 232.393 ns/op
# Warmup Iteration   4: 234.111 ns/op
# Warmup Iteration   5: 230.988 ns/op
Iteration   1: 232.915 ns/op
Iteration   2: 243.302 ns/op
Iteration   3: 230.963 ns/op
Iteration   4: 231.283 ns/op
Iteration   5: 235.537 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.runtime.fission.XorCount.fused":
  234.800 ±(99.9%) 19.584 ns/op [Average]
  (min, avg, max) = (230.963, 234.800, 243.302), stdev = 5.086
  CI (99.9%): [215.216, 254.384] (assumes normal distribution)

Secondary result "com.openkappa.runtime.fission.XorCount.fused:·asm":
PrintAssembly processed: 72959 total address lines.
Perf output processed (skipped 9.890 seconds):
 Column 1: cycles (4553 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 449 (341 bytes) 

                  0x00007f6eac35b9c9: test   %r11d,%r11d
                  0x00007f6eac35b9cc: jne    0x00007f6eac35bb4f  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@33 (line 234)
                  0x00007f6eac35b9d2: mov    $0x1,%ebp
         ╭        0x00007f6eac35b9d7: jmp    0x00007f6eac35ba14
         │↗       0x00007f6eac35b9d9: xor    %edx,%edx          ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                     ; - com.openkappa.runtime.fission.XorCount::fused@33 (line 31)
         ││                                                     ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
         ││ ↗↗↗   0x00007f6eac35b9db: mov    %r14,0x60(%rsp)
         ││ │││   0x00007f6eac35b9e0: mov    %r13,0x70(%rsp)
  0.46%  ││ │││   0x00007f6eac35b9e5: mov    0x8(%rsp),%rsi
         ││ │││   0x00007f6eac35b9ea: nop
         ││ │││   0x00007f6eac35b9eb: callq  0x00007f6ea489cb00  ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [8]=Oop }
         ││ │││                                                 ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@20 (line 232)
         ││ │││                                                 ;   {optimized virtual_call}
  0.18%  ││ │││   0x00007f6eac35b9f0: mov    0x60(%rsp),%r14
         ││ │││   0x00007f6eac35b9f5: movzbl 0x94(%r14),%r11d   ;*goto {reexecute=0 rethrow=0 return_oop=0}
         ││ │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@66 (line 31)
         ││ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.04%  ││ │││   0x00007f6eac35b9fd: mov    0x108(%r15),%r10
  0.13%  ││ │││   0x00007f6eac35ba04: add    $0x1,%rbp          ; ImmutableOopMap{r14=Oop [104]=Oop [112]=Oop [8]=Oop }
         ││ │││                                                 ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@33 (line 234)
         ││ │││   0x00007f6eac35ba08: test   %eax,(%r10)        ;   {poll}
         ││ │││   0x00007f6eac35ba0b: test   %r11d,%r11d
         ││ │││   0x00007f6eac35ba0e: jne    0x00007f6eac35bb54  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@36 (line 235)
  0.09%  ↘│ │││   0x00007f6eac35ba14: mov    0x70(%rsp),%r13
  0.15%   │ │││   0x00007f6eac35ba19: mov    0x10(%r13),%ecx    ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@6 (line 31)
          │ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
          │ │││   0x00007f6eac35ba1d: mov    0xc(%r12,%rcx,8),%r8d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@9 (line 31)
          │ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
          │ │││                                                 ; implicit exception: dispatches to 0x00007f6eac35bca0
          │ │││   0x00007f6eac35ba22: mov    0x14(%r13),%eax    ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@20 (line 31)
          │ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.02%   │ │││   0x00007f6eac35ba26: mov    0xc(%r12,%rax,8),%edi  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@23 (line 31)
          │ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
          │ │││                                                 ; implicit exception: dispatches to 0x00007f6eac35bca0
  0.13%   │ │││   0x00007f6eac35ba2b: test   %edi,%edi
          ╰ │││   0x00007f6eac35ba2d: jbe    0x00007f6eac35b9d9  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@24 (line 31)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
            │││   0x00007f6eac35ba2f: test   %r8d,%r8d
            │││   0x00007f6eac35ba32: jbe    0x00007f6eac35bb48  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@33 (line 31)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
            │││   0x00007f6eac35ba38: test   %r8d,%r8d
            │││   0x00007f6eac35ba3b: jbe    0x00007f6eac35bb97
            │││   0x00007f6eac35ba41: mov    0x10(%r12,%rcx,8),%r9  ;*laload {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@42 (line 32)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.13%     │││   0x00007f6eac35ba46: test   %edi,%edi
            │││   0x00007f6eac35ba48: jbe    0x00007f6eac35bbc2
            │││   0x00007f6eac35ba4e: xor    0x10(%r12,%rax,8),%r9  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
            │││   0x00007f6eac35ba53: mov    %r9,0x10(%r12,%rcx,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.09%     │││   0x00007f6eac35ba58: cmp    %edi,%r8d
  0.04%     │││   0x00007f6eac35ba5b: mov    %r8d,%r11d
            │││   0x00007f6eac35ba5e: cmovg  %edi,%r11d
            │││   0x00007f6eac35ba62: lea    (%r12,%rax,8),%r10
  0.09%     │││   0x00007f6eac35ba66: popcnt %r9,%rdx           ;*invokestatic bitCount {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@58 (line 33)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.15%     │││   0x00007f6eac35ba6b: mov    %r11d,%r9d
            │││   0x00007f6eac35ba6e: add    $0xfffffffd,%r9d
  0.15%     │││   0x00007f6eac35ba72: cmp    %r9d,%r11d
            │││   0x00007f6eac35ba75: mov    $0x80000000,%r11d
  0.18%     │││   0x00007f6eac35ba7b: cmovl  %r11d,%r9d
            │││   0x00007f6eac35ba7f: lea    (%r12,%rcx,8),%rbx
            │││   0x00007f6eac35ba83: cmp    $0x1,%r9d
            │││   0x00007f6eac35ba87: jle    0x00007f6eac35bb86
            │││   0x00007f6eac35ba8d: mov    $0x1,%r11d
  0.11%     │││   0x00007f6eac35ba93: nopw   0x0(%rax,%rax,1)
            │││   0x00007f6eac35ba9c: data16 data16 xchg %ax,%ax  ;*laload {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@48 (line 32)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.31%    ↗│││   0x00007f6eac35baa0: mov    0x10(%r10,%r11,8),%rsi
  2.28%    ││││   0x00007f6eac35baa5: xor    0x10(%rbx,%r11,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  7.69%    ││││   0x00007f6eac35baaa: mov    %rsi,0x10(%rbx,%r11,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  2.06%    ││││   0x00007f6eac35baaf: popcnt %rsi,%rsi
  8.92%    ││││   0x00007f6eac35bab4: add    %esi,%edx
  8.81%    ││││   0x00007f6eac35bab6: mov    0x18(%r10,%r11,8),%rsi
  0.46%    ││││   0x00007f6eac35babb: xor    0x18(%rbx,%r11,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.31%    ││││   0x00007f6eac35bac0: mov    %rsi,0x18(%rbx,%r11,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.92%    ││││   0x00007f6eac35bac5: popcnt %rsi,%rsi
  8.65%    ││││   0x00007f6eac35baca: add    %esi,%edx
  7.78%    ││││   0x00007f6eac35bacc: mov    0x20(%r10,%r11,8),%rsi
  0.46%    ││││   0x00007f6eac35bad1: xor    0x20(%rbx,%r11,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.55%    ││││   0x00007f6eac35bad6: mov    %rsi,0x20(%rbx,%r11,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  8.02%    ││││   0x00007f6eac35badb: popcnt %rsi,%rsi
  5.45%    ││││   0x00007f6eac35bae0: add    %esi,%edx
  7.88%    ││││   0x00007f6eac35bae2: mov    0x28(%r10,%r11,8),%rsi
  0.37%    ││││   0x00007f6eac35bae7: xor    0x28(%rbx,%r11,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  3.29%    ││││   0x00007f6eac35baec: mov    %rsi,0x28(%rbx,%r11,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.88%    ││││   0x00007f6eac35baf1: popcnt %rsi,%rsi
  6.02%    ││││   0x00007f6eac35baf6: add    %esi,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@61 (line 33)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  8.30%    ││││   0x00007f6eac35baf8: add    $0x4,%r11d         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@63 (line 31)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  1.27%    ││││   0x00007f6eac35bafc: cmp    %r9d,%r11d
           ╰│││   0x00007f6eac35baff: jl     0x00007f6eac35baa0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@24 (line 31)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
            │││   0x00007f6eac35bb01: cmp    %edi,%r11d
            ╰││   0x00007f6eac35bb04: jge    0x00007f6eac35b9db
  0.02%      ││   0x00007f6eac35bb0a: xchg   %ax,%ax            ;*laload {reexecute=0 rethrow=0 return_oop=0}
             ││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@48 (line 32)
             ││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.22%      ││↗  0x00007f6eac35bb0c: cmp    %r8d,%r11d
             ╰││  0x00007f6eac35bb0f: jge    0x00007f6eac35b9db  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@33 (line 31)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.18%       ││  0x00007f6eac35bb15: cmp    %r8d,%r11d
              ││  0x00007f6eac35bb18: jae    0x00007f6eac35bb91
              ││  0x00007f6eac35bb1a: mov    0x10(%rbx,%r11,8),%r9  ;*laload {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@42 (line 32)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.02%       ││  0x00007f6eac35bb1f: cmp    %edi,%r11d
              ││  0x00007f6eac35bb22: jae    0x00007f6eac35bbbc
  0.26%       ││  0x00007f6eac35bb28: xor    0x10(%r10,%r11,8),%r9  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.18%       ││  0x00007f6eac35bb2d: mov    %r9,0x10(%rbx,%r11,8)  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@4 (line 31)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.35%       ││  0x00007f6eac35bb32: popcnt %r9,%r9
  0.61%       ││  0x00007f6eac35bb37: add    %r9d,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@61 (line 33)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.33%       ││  0x00007f6eac35bb3a: inc    %r11d              ;*iinc {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@63 (line 31)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
              ││  0x00007f6eac35bb3d: cmp    %edi,%r11d
              ╰│  0x00007f6eac35bb40: jge    0x00007f6eac35b9db  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
               │                                                ; - com.openkappa.runtime.fission.XorCount::fused@24 (line 31)
               │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
               ╰  0x00007f6eac35bb46: jmp    0x00007f6eac35bb0c
                  0x00007f6eac35bb48: xor    %edx,%edx
....................................................................................................
 95.01%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.01%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 449 (341 bytes) 
  2.26%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 404 (52 bytes) 
  0.48%   [kernel.kallsyms]  do_syscall_64 (0 bytes) 
  0.22%   [kernel.kallsyms]  entry_SYSCALL_64 (41 bytes) 
  0.11%   [kernel.kallsyms]  syscall_return_via_sysret (0 bytes) 
  0.07%        libc-2.27.so  __GI___libc_write (16 bytes) 
  0.04%   [kernel.kallsyms]  fpregs_assert_state_consistent (11 bytes) 
  0.04%   [kernel.kallsyms]  native_write_msr (0 bytes) 
  0.04%   [kernel.kallsyms]  fput_many (17 bytes) 
  0.04%   [kernel.kallsyms]  schedule (9 bytes) 
  0.04%           libjvm.so  xmlStream::write_text (0 bytes) 
  0.04%        libc-2.27.so  syscall (0 bytes) 
  0.02%   [kernel.kallsyms]  prepare_exit_to_usermode (0 bytes) 
  0.02%   [kernel.kallsyms]  switch_fpu_return (0 bytes) 
  0.02%   [kernel.kallsyms]  mm_update_next_owner (0 bytes) 
  0.02%   [kernel.kallsyms]  __x64_sys_gettid (0 bytes) 
  0.02%   [kernel.kallsyms]  try_to_wake_up (0 bytes) 
  0.02%   [kernel.kallsyms]  try_to_wake_up (0 bytes) 
  0.02%   [kernel.kallsyms]  set_next_buddy (0 bytes) 
  0.02%   [kernel.kallsyms]  reweight_entity (0 bytes) 
  1.38%  <...other 63 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.01%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 449 
  2.26%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 404 
  0.48%   [kernel.kallsyms]  do_syscall_64 
  0.22%   [kernel.kallsyms]  entry_SYSCALL_64 
  0.13%   [kernel.kallsyms]  syscall_return_via_sysret 
  0.07%        libc-2.27.so  vfprintf 
  0.07%        libc-2.27.so  __GI___libc_write 
  0.07%        libc-2.27.so  _IO_default_xsputn 
  0.04%   [kernel.kallsyms]  schedule 
  0.04%   [kernel.kallsyms]  fput_many 
  0.04%   [kernel.kallsyms]  jbd2_journal_stop 
  0.04%   [kernel.kallsyms]  psi_task_change 
  0.04%   [kernel.kallsyms]  ext4_da_write_begin 
  0.04%   [kernel.kallsyms]  ext4_do_update_inode 
  0.04%        libc-2.27.so  syscall 
  0.04%   [kernel.kallsyms]  try_to_wake_up 
  0.04%   [kernel.kallsyms]  fpregs_assert_state_consistent 
  0.04%   [kernel.kallsyms]  native_write_msr 
  0.04%           libjvm.so  xmlStream::write_text 
  0.02%   [kernel.kallsyms]  __schedule 
  1.16%  <...other 53 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.28%         c2, level 4
  1.89%   [kernel.kallsyms]
  0.37%           libjvm.so
  0.29%        libc-2.27.so
  0.09%         interpreter
  0.04%      hsdis-amd64.so
  0.02%         c1, level 3
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9-Ubuntu-0ubuntu2.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.openkappa.runtime.fission.XorCount.fused
# Parameters: (size = 512)

# Run progress: 60.00% complete, ETA 00:01:04
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 535.934 ns/op
# Warmup Iteration   2: 405.545 ns/op
# Warmup Iteration   3: 395.056 ns/op
# Warmup Iteration   4: 463.518 ns/op
# Warmup Iteration   5: 463.278 ns/op
Iteration   1: 471.557 ns/op
Iteration   2: 486.902 ns/op
Iteration   3: 463.289 ns/op
Iteration   4: 463.317 ns/op
Iteration   5: 465.850 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.runtime.fission.XorCount.fused":
  470.183 ±(99.9%) 38.258 ns/op [Average]
  (min, avg, max) = (463.289, 470.183, 486.902), stdev = 9.936
  CI (99.9%): [431.925, 508.441] (assumes normal distribution)

Secondary result "com.openkappa.runtime.fission.XorCount.fused:·asm":
PrintAssembly processed: 73234 total address lines.
Perf output processed (skipped 8.726 seconds):
 Column 1: cycles (4769 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 454 (332 bytes) 

                  0x00007ff01c35d0d1: test   %r11d,%r11d
                  0x00007ff01c35d0d4: jne    0x00007ff01c35d24e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@33 (line 234)
                  0x00007ff01c35d0da: mov    $0x1,%ebp
         ╭        0x00007ff01c35d0df: jmp    0x00007ff01c35d11c
         │↗       0x00007ff01c35d0e1: xor    %edx,%edx          ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                     ; - com.openkappa.runtime.fission.XorCount::fused@33 (line 31)
         ││                                                     ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
         ││ ↗↗↗   0x00007ff01c35d0e3: mov    %r14,0x60(%rsp)
         ││ │││   0x00007ff01c35d0e8: mov    %rax,0x70(%rsp)
  0.31%  ││ │││   0x00007ff01c35d0ed: mov    0x8(%rsp),%rsi
         ││ │││   0x00007ff01c35d0f2: nop
         ││ │││   0x00007ff01c35d0f3: callq  0x00007ff01489cb00  ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [8]=Oop }
         ││ │││                                                 ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@20 (line 232)
         ││ │││                                                 ;   {optimized virtual_call}
  0.34%  ││ │││   0x00007ff01c35d0f8: mov    0x60(%rsp),%r14
         ││ │││   0x00007ff01c35d0fd: movzbl 0x94(%r14),%r10d   ;*goto {reexecute=0 rethrow=0 return_oop=0}
         ││ │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@66 (line 31)
         ││ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
         ││ │││   0x00007ff01c35d105: mov    0x108(%r15),%r11
  0.08%  ││ │││   0x00007ff01c35d10c: add    $0x1,%rbp          ; ImmutableOopMap{r14=Oop [104]=Oop [112]=Oop [8]=Oop }
         ││ │││                                                 ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@33 (line 234)
         ││ │││   0x00007ff01c35d110: test   %eax,(%r11)        ;   {poll}
         ││ │││   0x00007ff01c35d113: test   %r10d,%r10d
         ││ │││   0x00007ff01c35d116: jne    0x00007ff01c35d253  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@36 (line 235)
         ↘│ │││   0x00007ff01c35d11c: mov    0x70(%rsp),%rax
  0.15%   │ │││   0x00007ff01c35d121: mov    0x10(%rax),%r8d    ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@6 (line 31)
          │ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
          │ │││   0x00007ff01c35d125: mov    0xc(%r12,%r8,8),%r11d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@9 (line 31)
          │ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
          │ │││                                                 ; implicit exception: dispatches to 0x00007ff01c35d3a0
          │ │││   0x00007ff01c35d12a: mov    0x14(%rax),%r13d   ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@20 (line 31)
          │ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
          │ │││   0x00007ff01c35d12e: mov    0xc(%r12,%r13,8),%ecx  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@23 (line 31)
          │ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
          │ │││                                                 ; implicit exception: dispatches to 0x00007ff01c35d3a0
  0.13%   │ │││   0x00007ff01c35d133: test   %ecx,%ecx
          ╰ │││   0x00007ff01c35d135: jbe    0x00007ff01c35d0e1  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@24 (line 31)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
            │││   0x00007ff01c35d137: test   %r11d,%r11d
            │││   0x00007ff01c35d13a: jbe    0x00007ff01c35d247  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@33 (line 31)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
            │││   0x00007ff01c35d140: test   %r11d,%r11d
            │││   0x00007ff01c35d143: jbe    0x00007ff01c35d296
            │││   0x00007ff01c35d149: mov    0x10(%r12,%r8,8),%rbx  ;*laload {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@42 (line 32)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.02%     │││   0x00007ff01c35d14e: test   %ecx,%ecx
            │││   0x00007ff01c35d150: jbe    0x00007ff01c35d2c2
            │││   0x00007ff01c35d156: xor    0x10(%r12,%r13,8),%rbx  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
            │││   0x00007ff01c35d15b: mov    %rbx,0x10(%r12,%r8,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.46%     │││   0x00007ff01c35d160: cmp    %ecx,%r11d
  0.04%     │││   0x00007ff01c35d163: mov    %r11d,%r9d
            │││   0x00007ff01c35d166: cmovg  %ecx,%r9d
            │││   0x00007ff01c35d16a: lea    (%r12,%r13,8),%r10
  0.13%     │││   0x00007ff01c35d16e: popcnt %rbx,%rdx          ;*invokestatic bitCount {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@58 (line 33)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.04%     │││   0x00007ff01c35d173: mov    %r9d,%ebx
            │││   0x00007ff01c35d176: add    $0xfffffffd,%ebx
            │││   0x00007ff01c35d179: cmp    %ebx,%r9d
  0.04%     │││   0x00007ff01c35d17c: mov    $0x80000000,%r9d
  0.08%     │││   0x00007ff01c35d182: cmovl  %r9d,%ebx
            │││   0x00007ff01c35d186: lea    (%r12,%r8,8),%rdi
            │││   0x00007ff01c35d18a: cmp    $0x1,%ebx
            │││   0x00007ff01c35d18d: jle    0x00007ff01c35d285
  0.02%     │││   0x00007ff01c35d193: mov    $0x1,%r9d
  0.04%     │││   0x00007ff01c35d199: nopl   0x0(%rax)          ;*laload {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@48 (line 32)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.08%    ↗│││   0x00007ff01c35d1a0: mov    0x10(%r10,%r9,8),%rsi
  1.28%    ││││   0x00007ff01c35d1a5: xor    0x10(%rdi,%r9,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  8.01%    ││││   0x00007ff01c35d1aa: mov    %rsi,0x10(%rdi,%r9,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  2.10%    ││││   0x00007ff01c35d1af: popcnt %rsi,%rsi
  9.73%    ││││   0x00007ff01c35d1b4: add    %esi,%edx
  9.98%    ││││   0x00007ff01c35d1b6: mov    0x18(%r10,%r9,8),%rsi
  0.06%    ││││   0x00007ff01c35d1bb: xor    0x18(%rdi,%r9,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.23%    ││││   0x00007ff01c35d1c0: mov    %rsi,0x18(%rdi,%r9,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.15%    ││││   0x00007ff01c35d1c5: popcnt %rsi,%rsi
  9.56%    ││││   0x00007ff01c35d1ca: add    %esi,%edx
  7.70%    ││││   0x00007ff01c35d1cc: mov    0x20(%r10,%r9,8),%rsi
  0.15%    ││││   0x00007ff01c35d1d1: xor    0x20(%rdi,%r9,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.15%    ││││   0x00007ff01c35d1d6: mov    %rsi,0x20(%rdi,%r9,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
 12.41%    ││││   0x00007ff01c35d1db: popcnt %rsi,%rsi
  4.30%    ││││   0x00007ff01c35d1e0: add    %esi,%edx
  6.08%    ││││   0x00007ff01c35d1e2: mov    0x28(%r10,%r9,8),%rsi
  0.21%    ││││   0x00007ff01c35d1e7: xor    0x28(%rdi,%r9,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  3.88%    ││││   0x00007ff01c35d1ec: mov    %rsi,0x28(%rdi,%r9,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.17%    ││││   0x00007ff01c35d1f1: popcnt %rsi,%rsi
  5.77%    ││││   0x00007ff01c35d1f6: add    %esi,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@61 (line 33)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  7.59%    ││││   0x00007ff01c35d1f8: add    $0x4,%r9d          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@63 (line 31)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  2.24%    ││││   0x00007ff01c35d1fc: cmp    %ebx,%r9d
           ╰│││   0x00007ff01c35d1ff: jl     0x00007ff01c35d1a0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@24 (line 31)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.46%     │││   0x00007ff01c35d201: cmp    %ecx,%r9d
            ╰││   0x00007ff01c35d204: jge    0x00007ff01c35d0e3
  0.71%      ││   0x00007ff01c35d20a: xchg   %ax,%ax            ;*laload {reexecute=0 rethrow=0 return_oop=0}
             ││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@48 (line 32)
             ││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
             ││↗  0x00007ff01c35d20c: cmp    %r11d,%r9d
             ╰││  0x00007ff01c35d20f: jge    0x00007ff01c35d0e3  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@33 (line 31)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.27%       ││  0x00007ff01c35d215: cmp    %r11d,%r9d
              ││  0x00007ff01c35d218: jae    0x00007ff01c35d290
              ││  0x00007ff01c35d21a: mov    0x10(%rdi,%r9,8),%rbx  ;*laload {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@42 (line 32)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.38%       ││  0x00007ff01c35d21f: cmp    %ecx,%r9d
              ││  0x00007ff01c35d222: jae    0x00007ff01c35d2bc
              ││  0x00007ff01c35d228: xor    0x10(%r10,%r9,8),%rbx  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.46%       ││  0x00007ff01c35d22d: mov    %rbx,0x10(%rdi,%r9,8)  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@4 (line 31)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.36%       ││  0x00007ff01c35d232: popcnt %rbx,%rbx
  0.15%       ││  0x00007ff01c35d237: add    %ebx,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@61 (line 33)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.31%       ││  0x00007ff01c35d239: inc    %r9d               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@63 (line 31)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
              ││  0x00007ff01c35d23c: cmp    %ecx,%r9d
              ╰│  0x00007ff01c35d23f: jge    0x00007ff01c35d0e3  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
               │                                                ; - com.openkappa.runtime.fission.XorCount::fused@24 (line 31)
               │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
               ╰  0x00007ff01c35d245: jmp    0x00007ff01c35d20c
                  0x00007ff01c35d247: xor    %edx,%edx
....................................................................................................
 96.81%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.81%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 454 (332 bytes) 
  0.86%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 411 (52 bytes) 
  0.46%   [kernel.kallsyms]  do_syscall_64 (0 bytes) 
  0.21%   [kernel.kallsyms]  entry_SYSCALL_64 (60 bytes) 
  0.15%   [kernel.kallsyms]  syscall_return_via_sysret (1 bytes) 
  0.04%   [kernel.kallsyms]  native_write_msr (0 bytes) 
  0.04%   [kernel.kallsyms]  copy_user_generic_unrolled (0 bytes) 
  0.04%   [kernel.kallsyms]  mutex_lock (24 bytes) 
  0.02%   [kernel.kallsyms]  prepare_exit_to_usermode (0 bytes) 
  0.02%   [kernel.kallsyms]  native_sched_clock (0 bytes) 
  0.02%   [kernel.kallsyms]  switch_fpu_return (0 bytes) 
  0.02%   [kernel.kallsyms]  __task_pid_nr_ns (0 bytes) 
  0.02%   [kernel.kallsyms]  wake_up_process (0 bytes) 
  0.02%   [kernel.kallsyms]  update_load_avg (0 bytes) 
  0.02%   [kernel.kallsyms]  check_preempt_wakeup (0 bytes) 
  0.02%   [kernel.kallsyms]  pick_next_task_fair (0 bytes) 
  0.02%   [kernel.kallsyms]  __update_load_avg_cfs_rq (0 bytes) 
  0.02%   [kernel.kallsyms]  record_times (0 bytes) 
  0.02%   [kernel.kallsyms]  up_read (0 bytes) 
  0.02%   [kernel.kallsyms]  futex_wait (0 bytes) 
  1.11%  <...other 53 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.81%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 454 
  0.86%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 411 
  0.46%   [kernel.kallsyms]  do_syscall_64 
  0.21%   [kernel.kallsyms]  entry_SYSCALL_64 
  0.15%   [kernel.kallsyms]  syscall_return_via_sysret 
  0.06%   [kernel.kallsyms]  copy_user_generic_unrolled 
  0.04%        libc-2.27.so  vfprintf 
  0.04%   [kernel.kallsyms]  kmem_cache_free 
  0.04%   [kernel.kallsyms]  mutex_lock 
  0.04%           libjvm.so  resource_allocate_bytes 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%   [kernel.kallsyms]  native_write_msr 
  0.04%           libjvm.so  xmlStream::write_text 
  0.04%        libc-2.27.so  _IO_fwrite 
  0.02%           libjvm.so  jio_print 
  0.02%   [kernel.kallsyms]  futex_wait 
  0.02%           libjvm.so  klassVtable::update_inherited_vtable 
  0.02%   [kernel.kallsyms]  __task_pid_nr_ns 
  0.02%           libjvm.so  InterpreterRuntime::_new 
  0.02%   [kernel.kallsyms]  __update_load_avg_cfs_rq 
  0.96%  <...other 46 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.67%         c2, level 4
  1.70%   [kernel.kallsyms]
  0.27%           libjvm.so
  0.17%        libc-2.27.so
  0.10%         interpreter
  0.04%      hsdis-amd64.so
  0.02%         c1, level 3
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9-Ubuntu-0ubuntu2.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.openkappa.runtime.fission.XorCount.fused
# Parameters: (size = 1024)

# Run progress: 70.00% complete, ETA 00:00:47
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1152.723 ns/op
# Warmup Iteration   2: 835.718 ns/op
# Warmup Iteration   3: 767.222 ns/op
# Warmup Iteration   4: 911.974 ns/op
# Warmup Iteration   5: 909.893 ns/op
Iteration   1: 936.623 ns/op
Iteration   2: 948.256 ns/op
Iteration   3: 910.003 ns/op
Iteration   4: 909.823 ns/op
Iteration   5: 914.856 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.runtime.fission.XorCount.fused":
  923.912 ±(99.9%) 67.474 ns/op [Average]
  (min, avg, max) = (909.823, 923.912, 948.256), stdev = 17.523
  CI (99.9%): [856.438, 991.386] (assumes normal distribution)

Secondary result "com.openkappa.runtime.fission.XorCount.fused:·asm":
PrintAssembly processed: 73659 total address lines.
Perf output processed (skipped 9.107 seconds):
 Column 1: cycles (4474 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 437 (332 bytes) 

                  0x00007f131435cd51: test   %r11d,%r11d
                  0x00007f131435cd54: jne    0x00007f131435cece  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@33 (line 234)
                  0x00007f131435cd5a: mov    $0x1,%ebp
         ╭        0x00007f131435cd5f: jmp    0x00007f131435cd9c
         │↗       0x00007f131435cd61: xor    %edx,%edx          ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                     ; - com.openkappa.runtime.fission.XorCount::fused@33 (line 31)
         ││                                                     ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
         ││ ↗↗↗   0x00007f131435cd63: mov    %r14,0x60(%rsp)
         ││ │││   0x00007f131435cd68: mov    %rax,0x70(%rsp)
  0.09%  ││ │││   0x00007f131435cd6d: mov    0x8(%rsp),%rsi
         ││ │││   0x00007f131435cd72: nop
         ││ │││   0x00007f131435cd73: callq  0x00007f130c89cb00  ; ImmutableOopMap{[96]=Oop [104]=Oop [112]=Oop [8]=Oop }
         ││ │││                                                 ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@20 (line 232)
         ││ │││                                                 ;   {optimized virtual_call}
  0.18%  ││ │││   0x00007f131435cd78: mov    0x60(%rsp),%r14
         ││ │││   0x00007f131435cd7d: movzbl 0x94(%r14),%r10d   ;*goto {reexecute=0 rethrow=0 return_oop=0}
         ││ │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@66 (line 31)
         ││ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
         ││ │││   0x00007f131435cd85: mov    0x108(%r15),%r11
  0.02%  ││ │││   0x00007f131435cd8c: add    $0x1,%rbp          ; ImmutableOopMap{r14=Oop [104]=Oop [112]=Oop [8]=Oop }
         ││ │││                                                 ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@33 (line 234)
         ││ │││   0x00007f131435cd90: test   %eax,(%r11)        ;   {poll}
         ││ │││   0x00007f131435cd93: test   %r10d,%r10d
         ││ │││   0x00007f131435cd96: jne    0x00007f131435ced3  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@36 (line 235)
         ↘│ │││   0x00007f131435cd9c: mov    0x70(%rsp),%rax
  0.04%   │ │││   0x00007f131435cda1: mov    0x10(%rax),%r8d    ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@6 (line 31)
          │ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
          │ │││   0x00007f131435cda5: mov    0xc(%r12,%r8,8),%r11d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@9 (line 31)
          │ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
          │ │││                                                 ; implicit exception: dispatches to 0x00007f131435d020
          │ │││   0x00007f131435cdaa: mov    0x14(%rax),%r13d   ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@20 (line 31)
          │ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
          │ │││   0x00007f131435cdae: mov    0xc(%r12,%r13,8),%ecx  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │ │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@23 (line 31)
          │ │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
          │ │││                                                 ; implicit exception: dispatches to 0x00007f131435d020
  0.04%   │ │││   0x00007f131435cdb3: test   %ecx,%ecx
          ╰ │││   0x00007f131435cdb5: jbe    0x00007f131435cd61  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@24 (line 31)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
            │││   0x00007f131435cdb7: test   %r11d,%r11d
            │││   0x00007f131435cdba: jbe    0x00007f131435cec7  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@33 (line 31)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
            │││   0x00007f131435cdc0: test   %r11d,%r11d
            │││   0x00007f131435cdc3: jbe    0x00007f131435cf16
            │││   0x00007f131435cdc9: mov    0x10(%r12,%r8,8),%rbx  ;*laload {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@42 (line 32)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.07%     │││   0x00007f131435cdce: test   %ecx,%ecx
            │││   0x00007f131435cdd0: jbe    0x00007f131435cf42
            │││   0x00007f131435cdd6: xor    0x10(%r12,%r13,8),%rbx  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
            │││   0x00007f131435cddb: mov    %rbx,0x10(%r12,%r8,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.27%     │││   0x00007f131435cde0: cmp    %ecx,%r11d
  0.04%     │││   0x00007f131435cde3: mov    %r11d,%r9d
            │││   0x00007f131435cde6: cmovg  %ecx,%r9d
            │││   0x00007f131435cdea: lea    (%r12,%r13,8),%r10
  0.02%     │││   0x00007f131435cdee: popcnt %rbx,%rdx          ;*invokestatic bitCount {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@58 (line 33)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.02%     │││   0x00007f131435cdf3: mov    %r9d,%ebx
            │││   0x00007f131435cdf6: add    $0xfffffffd,%ebx
            │││   0x00007f131435cdf9: cmp    %ebx,%r9d
  0.04%     │││   0x00007f131435cdfc: mov    $0x80000000,%r9d
            │││   0x00007f131435ce02: cmovl  %r9d,%ebx
            │││   0x00007f131435ce06: lea    (%r12,%r8,8),%rdi
            │││   0x00007f131435ce0a: cmp    $0x1,%ebx
            │││   0x00007f131435ce0d: jle    0x00007f131435cf05
            │││   0x00007f131435ce13: mov    $0x1,%r9d
  0.02%     │││   0x00007f131435ce19: nopl   0x0(%rax)          ;*laload {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@48 (line 32)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.09%    ↗│││   0x00007f131435ce20: mov    0x10(%r10,%r9,8),%rsi
  0.83%    ││││   0x00007f131435ce25: xor    0x10(%rdi,%r9,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  7.49%    ││││   0x00007f131435ce2a: mov    %rsi,0x10(%rdi,%r9,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  2.32%    ││││   0x00007f131435ce2f: popcnt %rsi,%rsi
  9.57%    ││││   0x00007f131435ce34: add    %esi,%edx
  9.86%    ││││   0x00007f131435ce36: mov    0x18(%r10,%r9,8),%rsi
  0.02%    ││││   0x00007f131435ce3b: xor    0x18(%rdi,%r9,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.25%    ││││   0x00007f131435ce40: mov    %rsi,0x18(%rdi,%r9,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.22%    ││││   0x00007f131435ce45: popcnt %rsi,%rsi
 10.30%    ││││   0x00007f131435ce4a: add    %esi,%edx
  8.90%    ││││   0x00007f131435ce4c: mov    0x20(%r10,%r9,8),%rsi
  0.02%    ││││   0x00007f131435ce51: xor    0x20(%rdi,%r9,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.13%    ││││   0x00007f131435ce56: mov    %rsi,0x20(%rdi,%r9,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
 12.72%    ││││   0x00007f131435ce5b: popcnt %rsi,%rsi
  4.22%    ││││   0x00007f131435ce60: add    %esi,%edx
  6.21%    ││││   0x00007f131435ce62: mov    0x28(%r10,%r9,8),%rsi
  0.04%    ││││   0x00007f131435ce67: xor    0x28(%rdi,%r9,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  3.76%    ││││   0x00007f131435ce6c: mov    %rsi,0x28(%rdi,%r9,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.25%    ││││   0x00007f131435ce71: popcnt %rsi,%rsi
  6.17%    ││││   0x00007f131435ce76: add    %esi,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@61 (line 33)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  8.11%    ││││   0x00007f131435ce78: add    $0x4,%r9d          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           ││││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@63 (line 31)
           ││││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  2.48%    ││││   0x00007f131435ce7c: cmp    %ebx,%r9d
           ╰│││   0x00007f131435ce7f: jl     0x00007f131435ce20  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            │││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@24 (line 31)
            │││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.56%     │││   0x00007f131435ce81: cmp    %ecx,%r9d
            ╰││   0x00007f131435ce84: jge    0x00007f131435cd63
  0.54%      ││   0x00007f131435ce8a: xchg   %ax,%ax            ;*laload {reexecute=0 rethrow=0 return_oop=0}
             ││                                                 ; - com.openkappa.runtime.fission.XorCount::fused@48 (line 32)
             ││                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
             ││↗  0x00007f131435ce8c: cmp    %r11d,%r9d
             ╰││  0x00007f131435ce8f: jge    0x00007f131435cd63  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@33 (line 31)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.07%       ││  0x00007f131435ce95: cmp    %r11d,%r9d
              ││  0x00007f131435ce98: jae    0x00007f131435cf10
              ││  0x00007f131435ce9a: mov    0x10(%rdi,%r9,8),%rbx  ;*laload {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@42 (line 32)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.22%       ││  0x00007f131435ce9f: cmp    %ecx,%r9d
              ││  0x00007f131435cea2: jae    0x00007f131435cf3c
              ││  0x00007f131435cea8: xor    0x10(%r10,%r9,8),%rbx  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.13%       ││  0x00007f131435cead: mov    %rbx,0x10(%rdi,%r9,8)  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@4 (line 31)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.13%       ││  0x00007f131435ceb2: popcnt %rbx,%rbx
  0.02%       ││  0x00007f131435ceb7: add    %ebx,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@61 (line 33)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.11%       ││  0x00007f131435ceb9: inc    %r9d               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
              ││                                                ; - com.openkappa.runtime.fission.XorCount::fused@63 (line 31)
              ││                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
              ││  0x00007f131435cebc: cmp    %ecx,%r9d
              ╰│  0x00007f131435cebf: jge    0x00007f131435cd63  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
               │                                                ; - com.openkappa.runtime.fission.XorCount::fused@24 (line 31)
               │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
               ╰  0x00007f131435cec5: jmp    0x00007f131435ce8c
                  0x00007f131435cec7: xor    %edx,%edx
....................................................................................................
 96.62%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.62%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 437 (332 bytes) 
  0.63%   [kernel.kallsyms]  do_syscall_64 (0 bytes) 
  0.36%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 391 (52 bytes) 
  0.20%   [kernel.kallsyms]  syscall_return_via_sysret (1 bytes) 
  0.11%   [kernel.kallsyms]  entry_SYSCALL_64 (41 bytes) 
  0.07%        libc-2.27.so  syscall (0 bytes) 
  0.04%   [kernel.kallsyms]  native_sched_clock (0 bytes) 
  0.04%   [kernel.kallsyms]  clear_buddies (12 bytes) 
  0.04%   [kernel.kallsyms]  _raw_spin_lock_irqsave (0 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (24 bytes) 
  0.04%           libjvm.so  outputStream::update_position (8 bytes) 
  0.02%   [kernel.kallsyms]  prepare_exit_to_usermode (0 bytes) 
  0.02%   [kernel.kallsyms]  switch_fpu_return (0 bytes) 
  0.02%   [kernel.kallsyms]  native_write_msr (0 bytes) 
  0.02%   [kernel.kallsyms]  __x64_sys_gettid (0 bytes) 
  0.02%   [kernel.kallsyms]  __task_pid_nr_ns (0 bytes) 
  0.02%   [kernel.kallsyms]  resched_curr (0 bytes) 
  0.02%   [kernel.kallsyms]  try_to_wake_up (0 bytes) 
  0.02%   [kernel.kallsyms]  update_load_avg (0 bytes) 
  0.02%   [kernel.kallsyms]  update_cfs_group (0 bytes) 
  1.56%  <...other 70 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.62%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 437 
  0.63%   [kernel.kallsyms]  do_syscall_64 
  0.36%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 391 
  0.25%   [kernel.kallsyms]  syscall_return_via_sysret 
  0.11%   [kernel.kallsyms]  entry_SYSCALL_64 
  0.09%      hsdis-amd64.so  print_insn 
  0.07%   [kernel.kallsyms]  _raw_spin_lock_irqsave 
  0.07%         interpreter  method entry point (kind = zerolocals)  
  0.07%        libc-2.27.so  syscall 
  0.04%        libc-2.27.so  vfprintf 
  0.04%   [kernel.kallsyms]  native_sched_clock 
  0.04%   [kernel.kallsyms]  clear_buddies 
  0.04%   [kernel.kallsyms]  ext4_do_update_inode 
  0.04%           libjvm.so  outputStream::update_position 
  0.04%   [kernel.kallsyms]  entry_SYSCALL_64_after_hwframe 
  0.02%   [kernel.kallsyms]  copy_user_generic_unrolled 
  0.02%         interpreter  invoke return entry points  
  0.02%           libjvm.so  PcDescContainer::find_pc_desc_internal 
  0.02%           libjvm.so  os::available_memory 
  0.02%      hsdis-amd64.so  putop 
  1.34%  <...other 60 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.98%         c2, level 4
  1.94%   [kernel.kallsyms]
  0.56%           libjvm.so
  0.22%        libc-2.27.so
  0.13%         interpreter
  0.11%      hsdis-amd64.so
  0.02%      libz.so.1.2.11
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9-Ubuntu-0ubuntu2.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.openkappa.runtime.fission.XorCount.fused
# Parameters: (size = 2048)

# Run progress: 80.00% complete, ETA 00:00:31
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2217.911 ns/op
# Warmup Iteration   2: 1764.087 ns/op
# Warmup Iteration   3: 1558.473 ns/op
# Warmup Iteration   4: 1805.005 ns/op
# Warmup Iteration   5: 1803.602 ns/op
Iteration   1: 1856.705 ns/op
Iteration   2: 1881.056 ns/op
Iteration   3: 1804.299 ns/op
Iteration   4: 1804.062 ns/op
Iteration   5: 1813.986 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.runtime.fission.XorCount.fused":
  1832.022 ±(99.9%) 134.624 ns/op [Average]
  (min, avg, max) = (1804.062, 1832.022, 1881.056), stdev = 34.961
  CI (99.9%): [1697.398, 1966.645] (assumes normal distribution)

Secondary result "com.openkappa.runtime.fission.XorCount.fused:·asm":
PrintAssembly processed: 76483 total address lines.
Perf output processed (skipped 9.091 seconds):
 Column 1: cycles (4581 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 466 (166 bytes) 

                                                           ; - com.openkappa.runtime.fission.XorCount::fused@58 (line 33)
                                                           ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
             0x00007f0a6c35d173: mov    %r9d,%ebx
             0x00007f0a6c35d176: add    $0xfffffffd,%ebx
             0x00007f0a6c35d179: cmp    %ebx,%r9d
             0x00007f0a6c35d17c: mov    $0x80000000,%r9d
             0x00007f0a6c35d182: cmovl  %r9d,%ebx
             0x00007f0a6c35d186: lea    (%r12,%r8,8),%rdi
             0x00007f0a6c35d18a: cmp    $0x1,%ebx
             0x00007f0a6c35d18d: jle    0x00007f0a6c35d285
  0.04%      0x00007f0a6c35d193: mov    $0x1,%r9d
             0x00007f0a6c35d199: nopl   0x0(%rax)          ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - com.openkappa.runtime.fission.XorCount::fused@48 (line 32)
                                                           ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.31%  ↗   0x00007f0a6c35d1a0: mov    0x10(%r10,%r9,8),%rsi
  3.62%  │   0x00007f0a6c35d1a5: xor    0x10(%rdi,%r9,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
         │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  9.06%  │   0x00007f0a6c35d1aa: mov    %rsi,0x10(%rdi,%r9,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
         │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  3.32%  │   0x00007f0a6c35d1af: popcnt %rsi,%rsi
  7.84%  │   0x00007f0a6c35d1b4: add    %esi,%edx
  9.60%  │   0x00007f0a6c35d1b6: mov    0x18(%r10,%r9,8),%rsi
  0.39%  │   0x00007f0a6c35d1bb: xor    0x18(%rdi,%r9,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
         │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.70%  │   0x00007f0a6c35d1c0: mov    %rsi,0x18(%rdi,%r9,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
         │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.94%  │   0x00007f0a6c35d1c5: popcnt %rsi,%rsi
  9.04%  │   0x00007f0a6c35d1ca: add    %esi,%edx
  6.72%  │   0x00007f0a6c35d1cc: mov    0x20(%r10,%r9,8),%rsi
  0.55%  │   0x00007f0a6c35d1d1: xor    0x20(%rdi,%r9,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
         │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.61%  │   0x00007f0a6c35d1d6: mov    %rsi,0x20(%rdi,%r9,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
         │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  9.21%  │   0x00007f0a6c35d1db: popcnt %rsi,%rsi
  5.35%  │   0x00007f0a6c35d1e0: add    %esi,%edx
  6.24%  │   0x00007f0a6c35d1e2: mov    0x28(%r10,%r9,8),%rsi
  0.55%  │   0x00007f0a6c35d1e7: xor    0x28(%rdi,%r9,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
         │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  3.60%  │   0x00007f0a6c35d1ec: mov    %rsi,0x28(%rdi,%r9,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
         │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  1.20%  │   0x00007f0a6c35d1f1: popcnt %rsi,%rsi
  7.33%  │   0x00007f0a6c35d1f6: add    %esi,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - com.openkappa.runtime.fission.XorCount::fused@61 (line 33)
         │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  7.07%  │   0x00007f0a6c35d1f8: add    $0x4,%r9d          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - com.openkappa.runtime.fission.XorCount::fused@63 (line 31)
         │                                                 ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  1.64%  │   0x00007f0a6c35d1fc: cmp    %ebx,%r9d
         ╰   0x00007f0a6c35d1ff: jl     0x00007f0a6c35d1a0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - com.openkappa.runtime.fission.XorCount::fused@24 (line 31)
                                                           ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.20%      0x00007f0a6c35d201: cmp    %ecx,%r9d
             0x00007f0a6c35d204: jge    0x00007f0a6c35d0e3
  0.15%      0x00007f0a6c35d20a: xchg   %ax,%ax            ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - com.openkappa.runtime.fission.XorCount::fused@48 (line 32)
                                                           ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
          ↗  0x00007f0a6c35d20c: cmp    %r11d,%r9d
          │  0x00007f0a6c35d20f: jge    0x00007f0a6c35d0e3  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - com.openkappa.runtime.fission.XorCount::fused@33 (line 31)
          │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.04%   │  0x00007f0a6c35d215: cmp    %r11d,%r9d
          │  0x00007f0a6c35d218: jae    0x00007f0a6c35d290
          │  0x00007f0a6c35d21a: mov    0x10(%rdi,%r9,8),%rbx  ;*laload {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - com.openkappa.runtime.fission.XorCount::fused@42 (line 32)
          │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.04%   │  0x00007f0a6c35d21f: cmp    %ecx,%r9d
          │  0x00007f0a6c35d222: jae    0x00007f0a6c35d2bc
          │  0x00007f0a6c35d228: xor    0x10(%r10,%r9,8),%rbx  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
          │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.02%   │  0x00007f0a6c35d22d: mov    %rbx,0x10(%rdi,%r9,8)  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - com.openkappa.runtime.fission.XorCount::fused@4 (line 31)
          │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.11%   │  0x00007f0a6c35d232: popcnt %rbx,%rbx
  0.09%   │  0x00007f0a6c35d237: add    %ebx,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - com.openkappa.runtime.fission.XorCount::fused@61 (line 33)
          │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.02%   │  0x00007f0a6c35d239: inc    %r9d               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - com.openkappa.runtime.fission.XorCount::fused@63 (line 31)
          │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
          │  0x00007f0a6c35d23c: cmp    %ecx,%r9d
          │  0x00007f0a6c35d23f: jge    0x00007f0a6c35d0e3  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - com.openkappa.runtime.fission.XorCount::fused@24 (line 31)
          │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
          ╰  0x00007f0a6c35d245: jmp    0x00007f0a6c35d20c
             0x00007f0a6c35d247: xor    %edx,%edx
....................................................................................................
 95.61%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.61%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 466 (166 bytes) 
  0.55%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 423 (40 bytes) 
  0.52%   [kernel.kallsyms]  do_syscall_64 (0 bytes) 
  0.37%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 466 (61 bytes) 
  0.31%   [kernel.kallsyms]  entry_SYSCALL_64 (79 bytes) 
  0.31%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 466 (32 bytes) 
  0.13%   [kernel.kallsyms]  syscall_return_via_sysret (6 bytes) 
  0.07%        libc-2.27.so  _IO_fwrite (4 bytes) 
  0.04%   [kernel.kallsyms]  native_write_msr (0 bytes) 
  0.04%   [kernel.kallsyms]  crc32c_pcl_intel_update (0 bytes) 
  0.04%   [kernel.kallsyms]  enqueue_entity (0 bytes) 
  0.04%        libc-2.27.so  _IO_fwrite (0 bytes) 
  0.04%        libc-2.27.so  __libc_disable_asynccancel (0 bytes) 
  0.04%          ld-2.27.so  __tls_get_addr (21 bytes) 
  0.02%   [kernel.kallsyms]  prepare_exit_to_usermode (0 bytes) 
  0.02%   [kernel.kallsyms]  crc32c_pcl_intel_update (0 bytes) 
  0.02%   [kernel.kallsyms]  copy_process (0 bytes) 
  0.02%   [kernel.kallsyms]  __x64_sys_gettid (0 bytes) 
  0.02%   [kernel.kallsyms]  __task_pid_nr_ns (0 bytes) 
  0.02%   [kernel.kallsyms]  try_to_wake_up (0 bytes) 
  1.75%  <...other 80 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.29%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 466 
  0.55%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 423 
  0.52%   [kernel.kallsyms]  do_syscall_64 
  0.31%   [kernel.kallsyms]  entry_SYSCALL_64 
  0.15%   [kernel.kallsyms]  syscall_return_via_sysret 
  0.11%        libc-2.27.so  _IO_fwrite 
  0.07%   [kernel.kallsyms]  crc32c_pcl_intel_update 
  0.07%   [kernel.kallsyms]  pipe_write 
  0.04%        libc-2.27.so  vfprintf 
  0.04%          ld-2.27.so  __tls_get_addr 
  0.04%        libc-2.27.so  __libc_disable_asynccancel 
  0.04%           libjvm.so  ClassFileParser::skip_over_field_signature 
  0.04%        libc-2.27.so  __strcpy_sse2_unaligned 
  0.04%   [kernel.kallsyms]  __fget 
  0.04%   [kernel.kallsyms]  enqueue_task_fair 
  0.04%   [kernel.kallsyms]  native_write_msr 
  0.04%   [kernel.kallsyms]  enqueue_entity 
  0.04%           libjvm.so  xmlStream::write_text 
  0.04%   [kernel.kallsyms]  __wake_up_common_lock 
  0.02%   [kernel.kallsyms]  copy_user_generic_unrolled 
  1.44%  <...other 66 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 96.83%         c2, level 4
  2.01%   [kernel.kallsyms]
  0.52%           libjvm.so
  0.41%        libc-2.27.so
  0.07%         interpreter
  0.04%      hsdis-amd64.so
  0.04%          ld-2.27.so
  0.02%                    
  0.02%         c1, level 3
  0.02%      libz.so.1.2.11
....................................................................................................
100.00%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9-Ubuntu-0ubuntu2.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.openkappa.runtime.fission.XorCount.fused
# Parameters: (size = 4096)

# Run progress: 90.00% complete, ETA 00:00:15
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4523.567 ns/op
# Warmup Iteration   2: 3549.406 ns/op
# Warmup Iteration   3: 3356.188 ns/op
# Warmup Iteration   4: 3644.889 ns/op
# Warmup Iteration   5: 3602.213 ns/op
Iteration   1: 3673.605 ns/op
Iteration   2: 3764.623 ns/op
Iteration   3: 3591.376 ns/op
Iteration   4: 3591.618 ns/op
Iteration   5: 4378.417 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.openkappa.runtime.fission.XorCount.fused":
  3799.928 ±(99.9%) 1275.285 ns/op [Average]
  (min, avg, max) = (3591.376, 3799.928, 4378.417), stdev = 331.188
  CI (99.9%): [2524.643, 5075.213] (assumes normal distribution)

Secondary result "com.openkappa.runtime.fission.XorCount.fused:·asm":
PrintAssembly processed: 77909 total address lines.
Perf output processed (skipped 9.188 seconds):
 Column 1: cycles (4393 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 468 (164 bytes) 

                                                          ; - com.openkappa.runtime.fission.XorCount::fused@58 (line 33)
                                                          ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
            0x00007f522c35ebf3: mov    %r9d,%ebx
            0x00007f522c35ebf6: add    $0xfffffffd,%ebx
            0x00007f522c35ebf9: cmp    %ebx,%r9d
            0x00007f522c35ebfc: mov    $0x80000000,%r9d
            0x00007f522c35ec02: cmovl  %r9d,%ebx
            0x00007f522c35ec06: lea    (%r12,%r8,8),%rdi
            0x00007f522c35ec0a: cmp    $0x1,%ebx
            0x00007f522c35ec0d: jle    0x00007f522c35ed05
  0.02%     0x00007f522c35ec13: mov    $0x1,%r9d
            0x00007f522c35ec19: nopl   0x0(%rax)          ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - com.openkappa.runtime.fission.XorCount::fused@48 (line 32)
                                                          ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  1.91%  ↗  0x00007f522c35ec20: mov    0x10(%r10,%r9,8),%rsi
  4.10%  │  0x00007f522c35ec25: xor    0x10(%rdi,%r9,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
         │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  4.73%  │  0x00007f522c35ec2a: mov    %rsi,0x10(%rdi,%r9,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
         │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  6.10%  │  0x00007f522c35ec2f: popcnt %rsi,%rsi
  4.67%  │  0x00007f522c35ec34: add    %esi,%edx
  6.03%  │  0x00007f522c35ec36: mov    0x18(%r10,%r9,8),%rsi
  1.66%  │  0x00007f522c35ec3b: xor    0x18(%rdi,%r9,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
         │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  2.16%  │  0x00007f522c35ec40: mov    %rsi,0x18(%rdi,%r9,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
         │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  4.19%  │  0x00007f522c35ec45: popcnt %rsi,%rsi
  5.21%  │  0x00007f522c35ec4a: add    %esi,%edx
  3.62%  │  0x00007f522c35ec4c: mov    0x20(%r10,%r9,8),%rsi
  1.75%  │  0x00007f522c35ec51: xor    0x20(%rdi,%r9,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
         │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  6.26%  │  0x00007f522c35ec56: mov    %rsi,0x20(%rdi,%r9,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
         │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
 10.81%  │  0x00007f522c35ec5b: popcnt %rsi,%rsi
  5.08%  │  0x00007f522c35ec60: add    %esi,%edx
  5.62%  │  0x00007f522c35ec62: mov    0x28(%r10,%r9,8),%rsi
  0.75%  │  0x00007f522c35ec67: xor    0x28(%rdi,%r9,8),%rsi  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
         │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  3.14%  │  0x00007f522c35ec6c: mov    %rsi,0x28(%rdi,%r9,8)  ;*lastore {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - com.openkappa.runtime.fission.XorCount::fused@50 (line 32)
         │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  5.28%  │  0x00007f522c35ec71: popcnt %rsi,%rsi
  4.87%  │  0x00007f522c35ec76: add    %esi,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - com.openkappa.runtime.fission.XorCount::fused@61 (line 33)
         │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  4.33%  │  0x00007f522c35ec78: add    $0x4,%r9d          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - com.openkappa.runtime.fission.XorCount::fused@63 (line 31)
         │                                                ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  1.87%  │  0x00007f522c35ec7c: cmp    %ebx,%r9d
         ╰  0x00007f522c35ec7f: jl     0x00007f522c35ec20  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - com.openkappa.runtime.fission.XorCount::fused@24 (line 31)
                                                          ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.02%     0x00007f522c35ec81: cmp    %ecx,%r9d
            0x00007f522c35ec84: jge    0x00007f522c35eb63
  0.11%     0x00007f522c35ec8a: xchg   %ax,%ax            ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - com.openkappa.runtime.fission.XorCount::fused@48 (line 32)
                                                          ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
            0x00007f522c35ec8c: cmp    %r11d,%r9d
            0x00007f522c35ec8f: jge    0x00007f522c35eb63  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - com.openkappa.runtime.fission.XorCount::fused@33 (line 31)
                                                          ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.02%     0x00007f522c35ec95: cmp    %r11d,%r9d
            0x00007f522c35ec98: jae    0x00007f522c35ed10
            0x00007f522c35ec9a: mov    0x10(%rdi,%r9,8),%rbx  ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - com.openkappa.runtime.fission.XorCount::fused@42 (line 32)
                                                          ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
            0x00007f522c35ec9f: cmp    %ecx,%r9d
            0x00007f522c35eca2: jae    0x00007f522c35ed3c
            0x00007f522c35eca8: xor    0x10(%r10,%r9,8),%rbx  ;*lxor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - com.openkappa.runtime.fission.XorCount::fused@49 (line 32)
                                                          ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.05%     0x00007f522c35ecad: mov    %rbx,0x10(%rdi,%r9,8)  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - com.openkappa.runtime.fission.XorCount::fused@4 (line 31)
                                                          ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
  0.07%     0x00007f522c35ecb2: popcnt %rbx,%rbx
  0.05%     0x00007f522c35ecb7: add    %ebx,%edx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - com.openkappa.runtime.fission.XorCount::fused@61 (line 33)
                                                          ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
            0x00007f522c35ecb9: inc    %r9d               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - com.openkappa.runtime.fission.XorCount::fused@63 (line 31)
                                                          ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
            0x00007f522c35ecbc: cmp    %ecx,%r9d
            0x00007f522c35ecbf: jge    0x00007f522c35eb63  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - com.openkappa.runtime.fission.XorCount::fused@24 (line 31)
                                                          ; - com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub@17 (line 232)
            0x00007f522c35ecc5: jmp    0x00007f522c35ec8c
....................................................................................................
 94.49%  <total for region 1>

....[Hottest Regions]...............................................................................
 94.49%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 468 (164 bytes) 
  1.09%   [kernel.kallsyms]  do_syscall_64 (0 bytes) 
  0.55%   [kernel.kallsyms]  entry_SYSCALL_64 (79 bytes) 
  0.30%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 426 (25 bytes) 
  0.27%   [kernel.kallsyms]  syscall_return_via_sysret (1 bytes) 
  0.18%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 468 (68 bytes) 
  0.14%        libc-2.27.so  __GI___libc_write (64 bytes) 
  0.09%   [kernel.kallsyms]  native_write_msr (0 bytes) 
  0.09%           libjvm.so  RelocIterator::initialize (68 bytes) 
  0.07%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 468 (19 bytes) 
  0.05%   [kernel.kallsyms]  exit_to_usermode_loop (10 bytes) 
  0.05%   [kernel.kallsyms]  do_syscall_64 (5 bytes) 
  0.05%   [kernel.kallsyms]  pick_next_task_fair (6 bytes) 
  0.05%   [kernel.kallsyms]  pipe_write (19 bytes) 
  0.05%   [kernel.kallsyms]  common_file_perm (4 bytes) 
  0.05%   [kernel.kallsyms]  copy_user_generic_unrolled (26 bytes) 
  0.05%   [kernel.kallsyms]  __schedule (0 bytes) 
  0.05%   [kernel.kallsyms]  _raw_spin_lock_irqsave (18 bytes) 
  0.05%   [kernel.kallsyms]  _raw_spin_lock (20 bytes) 
  0.05%        libc-2.27.so  syscall (25 bytes) 
  2.25%  <...other 99 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 94.74%         c2, level 4  com.openkappa.runtime.fission.generated.XorCount_fused_jmhTest::fused_avgt_jmhStub, version 468 
  1.18%   [kernel.kallsyms]  do_syscall_64 
  0.55%   [kernel.kallsyms]  entry_SYSCALL_64 
  0.30%   [kernel.kallsyms]  syscall_return_via_sysret 
  0.30%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 426 
  0.14%        libc-2.27.so  __GI___libc_write 
  0.09%           libjvm.so  RelocIterator::initialize 
  0.09%   [kernel.kallsyms]  native_write_msr 
  0.09%   [kernel.kallsyms]  pipe_write 
  0.07%   [kernel.kallsyms]  __schedule 
  0.07%   [kernel.kallsyms]  ksys_write 
  0.07%      hsdis-amd64.so  print_insn 
  0.07%   [kernel.kallsyms]  exit_to_usermode_loop 
  0.07%        libc-2.27.so  _IO_fwrite 
  0.05%   [kernel.kallsyms]  copy_user_generic_unrolled 
  0.05%   [kernel.kallsyms]  crc32c_pcl_intel_update 
  0.05%         interpreter  invokeinterface  185 invokeinterface  
  0.05%   [kernel.kallsyms]  common_file_perm 
  0.05%   [kernel.kallsyms]  _raw_spin_lock 
  0.05%   [kernel.kallsyms]  _raw_spin_lock_irqsave 
  1.89%  <...other 75 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.04%         c2, level 4
  3.73%   [kernel.kallsyms]
  0.57%           libjvm.so
  0.41%        libc-2.27.so
  0.14%         interpreter
  0.09%      hsdis-amd64.so
....................................................................................................
 99.98%  <totals>



# Run complete. Total time: 00:02:38

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark               (size)  Mode  Cnt     Score      Error  Units
XorCount.fissured          256  avgt    5   148.279 ±    8.847  ns/op
XorCount.fissured:·asm     256  avgt            NaN               ---
XorCount.fissured          512  avgt    5   285.734 ±   12.963  ns/op
XorCount.fissured:·asm     512  avgt            NaN               ---
XorCount.fissured         1024  avgt    5   569.708 ±   41.803  ns/op
XorCount.fissured:·asm    1024  avgt            NaN               ---
XorCount.fissured         2048  avgt    5  1209.858 ±  384.798  ns/op
XorCount.fissured:·asm    2048  avgt            NaN               ---
XorCount.fissured         4096  avgt    5  2960.211 ±  933.205  ns/op
XorCount.fissured:·asm    4096  avgt            NaN               ---
XorCount.fused             256  avgt    5   234.800 ±   19.584  ns/op
XorCount.fused:·asm        256  avgt            NaN               ---
XorCount.fused             512  avgt    5   470.183 ±   38.258  ns/op
XorCount.fused:·asm        512  avgt            NaN               ---
XorCount.fused            1024  avgt    5   923.912 ±   67.474  ns/op
XorCount.fused:·asm       1024  avgt            NaN               ---
XorCount.fused            2048  avgt    5  1832.022 ±  134.624  ns/op
XorCount.fused:·asm       2048  avgt            NaN               ---
XorCount.fused            4096  avgt    5  3799.928 ± 1275.285  ns/op
XorCount.fused:·asm       4096  avgt            NaN               ---
